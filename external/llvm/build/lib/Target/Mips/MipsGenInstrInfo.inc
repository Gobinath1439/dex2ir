/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Enum Values                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace Mips {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    PROLOG_LABEL	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    ABSQ_S_PH	= 17,
    ABSQ_S_QB	= 18,
    ABSQ_S_W	= 19,
    ADD	= 20,
    ADDQH_PH	= 21,
    ADDQH_R_PH	= 22,
    ADDQH_R_W	= 23,
    ADDQH_W	= 24,
    ADDQ_PH	= 25,
    ADDQ_S_PH	= 26,
    ADDQ_S_W	= 27,
    ADDSC	= 28,
    ADDUH_QB	= 29,
    ADDUH_R_QB	= 30,
    ADDU_PH	= 31,
    ADDU_QB	= 32,
    ADDU_S_PH	= 33,
    ADDU_S_QB	= 34,
    ADDWC	= 35,
    ADD_MM	= 36,
    ADDi	= 37,
    ADDi_MM	= 38,
    ADDiu	= 39,
    ADDiu_MM	= 40,
    ADDu	= 41,
    ADDu_MM	= 42,
    ADJCALLSTACKDOWN	= 43,
    ADJCALLSTACKUP	= 44,
    AND	= 45,
    AND64	= 46,
    AND_MM	= 47,
    ANDi	= 48,
    ANDi64	= 49,
    ANDi_MM	= 50,
    APPEND	= 51,
    ATOMIC_CMP_SWAP_I16	= 52,
    ATOMIC_CMP_SWAP_I16_P8	= 53,
    ATOMIC_CMP_SWAP_I32	= 54,
    ATOMIC_CMP_SWAP_I32_P8	= 55,
    ATOMIC_CMP_SWAP_I64	= 56,
    ATOMIC_CMP_SWAP_I64_P8	= 57,
    ATOMIC_CMP_SWAP_I8	= 58,
    ATOMIC_CMP_SWAP_I8_P8	= 59,
    ATOMIC_LOAD_ADD_I16	= 60,
    ATOMIC_LOAD_ADD_I16_P8	= 61,
    ATOMIC_LOAD_ADD_I32	= 62,
    ATOMIC_LOAD_ADD_I32_P8	= 63,
    ATOMIC_LOAD_ADD_I64	= 64,
    ATOMIC_LOAD_ADD_I64_P8	= 65,
    ATOMIC_LOAD_ADD_I8	= 66,
    ATOMIC_LOAD_ADD_I8_P8	= 67,
    ATOMIC_LOAD_AND_I16	= 68,
    ATOMIC_LOAD_AND_I16_P8	= 69,
    ATOMIC_LOAD_AND_I32	= 70,
    ATOMIC_LOAD_AND_I32_P8	= 71,
    ATOMIC_LOAD_AND_I64	= 72,
    ATOMIC_LOAD_AND_I64_P8	= 73,
    ATOMIC_LOAD_AND_I8	= 74,
    ATOMIC_LOAD_AND_I8_P8	= 75,
    ATOMIC_LOAD_NAND_I16	= 76,
    ATOMIC_LOAD_NAND_I16_P8	= 77,
    ATOMIC_LOAD_NAND_I32	= 78,
    ATOMIC_LOAD_NAND_I32_P8	= 79,
    ATOMIC_LOAD_NAND_I64	= 80,
    ATOMIC_LOAD_NAND_I64_P8	= 81,
    ATOMIC_LOAD_NAND_I8	= 82,
    ATOMIC_LOAD_NAND_I8_P8	= 83,
    ATOMIC_LOAD_OR_I16	= 84,
    ATOMIC_LOAD_OR_I16_P8	= 85,
    ATOMIC_LOAD_OR_I32	= 86,
    ATOMIC_LOAD_OR_I32_P8	= 87,
    ATOMIC_LOAD_OR_I64	= 88,
    ATOMIC_LOAD_OR_I64_P8	= 89,
    ATOMIC_LOAD_OR_I8	= 90,
    ATOMIC_LOAD_OR_I8_P8	= 91,
    ATOMIC_LOAD_SUB_I16	= 92,
    ATOMIC_LOAD_SUB_I16_P8	= 93,
    ATOMIC_LOAD_SUB_I32	= 94,
    ATOMIC_LOAD_SUB_I32_P8	= 95,
    ATOMIC_LOAD_SUB_I64	= 96,
    ATOMIC_LOAD_SUB_I64_P8	= 97,
    ATOMIC_LOAD_SUB_I8	= 98,
    ATOMIC_LOAD_SUB_I8_P8	= 99,
    ATOMIC_LOAD_XOR_I16	= 100,
    ATOMIC_LOAD_XOR_I16_P8	= 101,
    ATOMIC_LOAD_XOR_I32	= 102,
    ATOMIC_LOAD_XOR_I32_P8	= 103,
    ATOMIC_LOAD_XOR_I64	= 104,
    ATOMIC_LOAD_XOR_I64_P8	= 105,
    ATOMIC_LOAD_XOR_I8	= 106,
    ATOMIC_LOAD_XOR_I8_P8	= 107,
    ATOMIC_SWAP_I16	= 108,
    ATOMIC_SWAP_I16_P8	= 109,
    ATOMIC_SWAP_I32	= 110,
    ATOMIC_SWAP_I32_P8	= 111,
    ATOMIC_SWAP_I64	= 112,
    ATOMIC_SWAP_I64_P8	= 113,
    ATOMIC_SWAP_I8	= 114,
    ATOMIC_SWAP_I8_P8	= 115,
    AddiuRxImmX16	= 116,
    AddiuRxPcImmX16	= 117,
    AddiuRxRxImm16	= 118,
    AddiuRxRxImmX16	= 119,
    AddiuRxRyOffMemX16	= 120,
    AddiuSpImm16	= 121,
    AddiuSpImmX16	= 122,
    AdduRxRyRz16	= 123,
    AndRxRxRy16	= 124,
    B	= 125,
    BALIGN	= 126,
    BAL_BR	= 127,
    BC1F	= 128,
    BC1T	= 129,
    BEQ	= 130,
    BEQ64	= 131,
    BGEZ	= 132,
    BGEZ64	= 133,
    BGEZAL	= 134,
    BGTZ	= 135,
    BGTZ64	= 136,
    BITREV	= 137,
    BLEZ	= 138,
    BLEZ64	= 139,
    BLTZ	= 140,
    BLTZ64	= 141,
    BLTZAL	= 142,
    BNE	= 143,
    BNE64	= 144,
    BPOSGE32	= 145,
    BPOSGE32_PSEUDO	= 146,
    BREAK	= 147,
    BeqzRxImm16	= 148,
    BeqzRxImmX16	= 149,
    BimmX16	= 150,
    BnezRxImm16	= 151,
    BnezRxImmX16	= 152,
    Break16	= 153,
    BteqzT8CmpX16	= 154,
    BteqzT8CmpiX16	= 155,
    BteqzT8SltX16	= 156,
    BteqzT8SltiX16	= 157,
    BteqzT8SltiuX16	= 158,
    BteqzT8SltuX16	= 159,
    BteqzX16	= 160,
    BtnezT8CmpX16	= 161,
    BtnezT8CmpiX16	= 162,
    BtnezT8SltX16	= 163,
    BtnezT8SltiX16	= 164,
    BtnezT8SltiuX16	= 165,
    BtnezT8SltuX16	= 166,
    BtnezX16	= 167,
    BuildPairF64	= 168,
    CEIL_L_D64	= 169,
    CEIL_L_S	= 170,
    CEIL_W_D32	= 171,
    CEIL_W_D64	= 172,
    CEIL_W_S	= 173,
    CFC1	= 174,
    CLO	= 175,
    CLZ	= 176,
    CMPGDU_EQ_QB	= 177,
    CMPGDU_LE_QB	= 178,
    CMPGDU_LT_QB	= 179,
    CMPGU_EQ_QB	= 180,
    CMPGU_LE_QB	= 181,
    CMPGU_LT_QB	= 182,
    CMPU_EQ_QB	= 183,
    CMPU_LE_QB	= 184,
    CMPU_LT_QB	= 185,
    CMP_EQ_PH	= 186,
    CMP_LE_PH	= 187,
    CMP_LT_PH	= 188,
    CTC1	= 189,
    CVT_D32_S	= 190,
    CVT_D32_W	= 191,
    CVT_D64_L	= 192,
    CVT_D64_S	= 193,
    CVT_D64_W	= 194,
    CVT_L_D64	= 195,
    CVT_L_S	= 196,
    CVT_S_D32	= 197,
    CVT_S_D64	= 198,
    CVT_S_L	= 199,
    CVT_S_W	= 200,
    CVT_W_D32	= 201,
    CVT_W_D64	= 202,
    CVT_W_S	= 203,
    C_EQ_D32	= 204,
    C_EQ_D64	= 205,
    C_EQ_S	= 206,
    C_F_D32	= 207,
    C_F_D64	= 208,
    C_F_S	= 209,
    C_LE_D32	= 210,
    C_LE_D64	= 211,
    C_LE_S	= 212,
    C_LT_D32	= 213,
    C_LT_D64	= 214,
    C_LT_S	= 215,
    C_NGE_D32	= 216,
    C_NGE_D64	= 217,
    C_NGE_S	= 218,
    C_NGLE_D32	= 219,
    C_NGLE_D64	= 220,
    C_NGLE_S	= 221,
    C_NGL_D32	= 222,
    C_NGL_D64	= 223,
    C_NGL_S	= 224,
    C_NGT_D32	= 225,
    C_NGT_D64	= 226,
    C_NGT_S	= 227,
    C_OLE_D32	= 228,
    C_OLE_D64	= 229,
    C_OLE_S	= 230,
    C_OLT_D32	= 231,
    C_OLT_D64	= 232,
    C_OLT_S	= 233,
    C_SEQ_D32	= 234,
    C_SEQ_D64	= 235,
    C_SEQ_S	= 236,
    C_SF_D32	= 237,
    C_SF_D64	= 238,
    C_SF_S	= 239,
    C_UEQ_D32	= 240,
    C_UEQ_D64	= 241,
    C_UEQ_S	= 242,
    C_ULE_D32	= 243,
    C_ULE_D64	= 244,
    C_ULE_S	= 245,
    C_ULT_D32	= 246,
    C_ULT_D64	= 247,
    C_ULT_S	= 248,
    C_UN_D32	= 249,
    C_UN_D64	= 250,
    C_UN_S	= 251,
    CmpRxRy16	= 252,
    CmpiRxImm16	= 253,
    CmpiRxImmX16	= 254,
    Constant32	= 255,
    DADD	= 256,
    DADDi	= 257,
    DADDiu	= 258,
    DADDu	= 259,
    DCLO	= 260,
    DCLZ	= 261,
    DERET	= 262,
    DEXT	= 263,
    DEXTM	= 264,
    DEXTU	= 265,
    DINS	= 266,
    DINSM	= 267,
    DINSU	= 268,
    DMFC0_3OP64	= 269,
    DMFC1	= 270,
    DMFC2_3OP64	= 271,
    DMTC0_3OP64	= 272,
    DMTC1	= 273,
    DMTC2_3OP64	= 274,
    DMULT	= 275,
    DMULTu	= 276,
    DPAQX_SA_W_PH	= 277,
    DPAQX_S_W_PH	= 278,
    DPAQ_SA_L_W	= 279,
    DPAQ_S_W_PH	= 280,
    DPAU_H_QBL	= 281,
    DPAU_H_QBR	= 282,
    DPAX_W_PH	= 283,
    DPA_W_PH	= 284,
    DPSQX_SA_W_PH	= 285,
    DPSQX_S_W_PH	= 286,
    DPSQ_SA_L_W	= 287,
    DPSQ_S_W_PH	= 288,
    DPSU_H_QBL	= 289,
    DPSU_H_QBR	= 290,
    DPSX_W_PH	= 291,
    DPS_W_PH	= 292,
    DROTR	= 293,
    DROTRV	= 294,
    DSBH	= 295,
    DSDIV	= 296,
    DSHD	= 297,
    DSLL	= 298,
    DSLL32	= 299,
    DSLL64_32	= 300,
    DSLLV	= 301,
    DSRA	= 302,
    DSRA32	= 303,
    DSRAV	= 304,
    DSRL	= 305,
    DSRL32	= 306,
    DSRLV	= 307,
    DSUBu	= 308,
    DUDIV	= 309,
    DivRxRy16	= 310,
    DivuRxRy16	= 311,
    ERET	= 312,
    EXT	= 313,
    EXTP	= 314,
    EXTPDP	= 315,
    EXTPDPV	= 316,
    EXTPV	= 317,
    EXTRV_RS_W	= 318,
    EXTRV_R_W	= 319,
    EXTRV_S_H	= 320,
    EXTRV_W	= 321,
    EXTR_RS_W	= 322,
    EXTR_R_W	= 323,
    EXTR_S_H	= 324,
    EXTR_W	= 325,
    ExtractElementF64	= 326,
    FABS_D32	= 327,
    FABS_D64	= 328,
    FABS_S	= 329,
    FADD_D32	= 330,
    FADD_D64	= 331,
    FADD_S	= 332,
    FCMP_D32	= 333,
    FCMP_D64	= 334,
    FCMP_S32	= 335,
    FDIV_D32	= 336,
    FDIV_D64	= 337,
    FDIV_S	= 338,
    FLOOR_L_D64	= 339,
    FLOOR_L_S	= 340,
    FLOOR_W_D32	= 341,
    FLOOR_W_D64	= 342,
    FLOOR_W_S	= 343,
    FMOV_D32	= 344,
    FMOV_D64	= 345,
    FMOV_S	= 346,
    FMUL_D32	= 347,
    FMUL_D64	= 348,
    FMUL_S	= 349,
    FNEG_D32	= 350,
    FNEG_D64	= 351,
    FNEG_S	= 352,
    FSQRT_D32	= 353,
    FSQRT_D64	= 354,
    FSQRT_S	= 355,
    FSUB_D32	= 356,
    FSUB_D64	= 357,
    FSUB_S	= 358,
    INS	= 359,
    INSV	= 360,
    J	= 361,
    JAL	= 362,
    JALR	= 363,
    JALR64	= 364,
    JALR64Pseudo	= 365,
    JALRPseudo	= 366,
    JR	= 367,
    JR64	= 368,
    Jal16	= 369,
    JrRa16	= 370,
    JrcRa16	= 371,
    JrcRx16	= 372,
    JumpLinkReg16	= 373,
    LB	= 374,
    LB64	= 375,
    LB64_P8	= 376,
    LBUX	= 377,
    LB_MM	= 378,
    LB_MM_P8	= 379,
    LB_P8	= 380,
    LBu	= 381,
    LBu64	= 382,
    LBu64_P8	= 383,
    LBu_MM	= 384,
    LBu_MM_P8	= 385,
    LBu_P8	= 386,
    LD	= 387,
    LDC1	= 388,
    LDC164	= 389,
    LDC164_P8	= 390,
    LDL	= 391,
    LDL_P8	= 392,
    LDR	= 393,
    LDR_P8	= 394,
    LDXC1	= 395,
    LDXC164	= 396,
    LDXC164_P8	= 397,
    LD_P8	= 398,
    LEA_ADDiu	= 399,
    LEA_ADDiu64	= 400,
    LH	= 401,
    LH64	= 402,
    LH64_P8	= 403,
    LHX	= 404,
    LH_MM	= 405,
    LH_MM_P8	= 406,
    LH_P8	= 407,
    LHu	= 408,
    LHu64	= 409,
    LHu64_P8	= 410,
    LHu_MM	= 411,
    LHu_MM_P8	= 412,
    LHu_P8	= 413,
    LL	= 414,
    LLD	= 415,
    LLD_P8	= 416,
    LL_P8	= 417,
    LOAD_AC128	= 418,
    LOAD_AC128_P8	= 419,
    LOAD_AC64	= 420,
    LOAD_AC64_P8	= 421,
    LOAD_AC_DSP	= 422,
    LOAD_AC_DSP_P8	= 423,
    LOAD_CCOND_DSP	= 424,
    LOAD_CCOND_DSP_P8	= 425,
    LUXC1	= 426,
    LUXC164	= 427,
    LUi	= 428,
    LUi64	= 429,
    LUi_MM	= 430,
    LW	= 431,
    LW64	= 432,
    LW64_P8	= 433,
    LWC1	= 434,
    LWC1_P8	= 435,
    LWL	= 436,
    LWL64	= 437,
    LWL64_P8	= 438,
    LWL_P8	= 439,
    LWR	= 440,
    LWR64	= 441,
    LWR64_P8	= 442,
    LWR_P8	= 443,
    LWX	= 444,
    LWXC1	= 445,
    LWXC1_P8	= 446,
    LW_MM	= 447,
    LW_MM_P8	= 448,
    LW_P8	= 449,
    LWu	= 450,
    LWu_P8	= 451,
    LbRxRyOffMemX16	= 452,
    LbuRxRyOffMemX16	= 453,
    LhRxRyOffMemX16	= 454,
    LhuRxRyOffMemX16	= 455,
    LiRxImm16	= 456,
    LiRxImmX16	= 457,
    LoadAddr32Imm	= 458,
    LoadAddr32Reg	= 459,
    LoadImm32Reg	= 460,
    LwConstant32	= 461,
    LwRxRyOffMemX16	= 462,
    LwRxSpImmX16	= 463,
    MADD	= 464,
    MADDU	= 465,
    MADDU_DSP	= 466,
    MADD_D32	= 467,
    MADD_D64	= 468,
    MADD_DSP	= 469,
    MADD_S	= 470,
    MAQ_SA_W_PHL	= 471,
    MAQ_SA_W_PHR	= 472,
    MAQ_S_W_PHL	= 473,
    MAQ_S_W_PHR	= 474,
    MFC0_3OP	= 475,
    MFC1	= 476,
    MFC2_3OP	= 477,
    MFHI	= 478,
    MFHI64	= 479,
    MFHI_DSP	= 480,
    MFLO	= 481,
    MFLO64	= 482,
    MFLO_DSP	= 483,
    MIPSeh_return32	= 484,
    MIPSeh_return64	= 485,
    MODSUB	= 486,
    MOVF_D32	= 487,
    MOVF_D64	= 488,
    MOVF_I	= 489,
    MOVF_I64	= 490,
    MOVF_S	= 491,
    MOVN_I64_D64	= 492,
    MOVN_I64_I	= 493,
    MOVN_I64_I64	= 494,
    MOVN_I64_S	= 495,
    MOVN_I_D32	= 496,
    MOVN_I_D64	= 497,
    MOVN_I_I	= 498,
    MOVN_I_I64	= 499,
    MOVN_I_S	= 500,
    MOVT_D32	= 501,
    MOVT_D64	= 502,
    MOVT_I	= 503,
    MOVT_I64	= 504,
    MOVT_S	= 505,
    MOVZ_I64_D64	= 506,
    MOVZ_I64_I	= 507,
    MOVZ_I64_I64	= 508,
    MOVZ_I64_S	= 509,
    MOVZ_I_D32	= 510,
    MOVZ_I_D64	= 511,
    MOVZ_I_I	= 512,
    MOVZ_I_I64	= 513,
    MOVZ_I_S	= 514,
    MSUB	= 515,
    MSUBU	= 516,
    MSUBU_DSP	= 517,
    MSUB_D32	= 518,
    MSUB_D64	= 519,
    MSUB_DSP	= 520,
    MSUB_S	= 521,
    MTC0_3OP	= 522,
    MTC1	= 523,
    MTC2_3OP	= 524,
    MTHI	= 525,
    MTHI64	= 526,
    MTHI_DSP	= 527,
    MTHLIP	= 528,
    MTLO	= 529,
    MTLO64	= 530,
    MTLO_DSP	= 531,
    MUL	= 532,
    MULEQ_S_W_PHL	= 533,
    MULEQ_S_W_PHR	= 534,
    MULEU_S_PH_QBL	= 535,
    MULEU_S_PH_QBR	= 536,
    MULQ_RS_PH	= 537,
    MULQ_RS_W	= 538,
    MULQ_S_PH	= 539,
    MULQ_S_W	= 540,
    MULSAQ_S_W_PH	= 541,
    MULSA_W_PH	= 542,
    MULT	= 543,
    MULTU_DSP	= 544,
    MULT_DSP	= 545,
    MULT_MM	= 546,
    MULTu	= 547,
    MULTu_MM	= 548,
    MUL_MM	= 549,
    MUL_PH	= 550,
    MUL_S_PH	= 551,
    Mfhi16	= 552,
    Mflo16	= 553,
    Move32R16	= 554,
    MoveR3216	= 555,
    MultRxRy16	= 556,
    MultRxRyRz16	= 557,
    MultuRxRy16	= 558,
    MultuRxRyRz16	= 559,
    NMADD_D32	= 560,
    NMADD_D64	= 561,
    NMADD_S	= 562,
    NMSUB_D32	= 563,
    NMSUB_D64	= 564,
    NMSUB_S	= 565,
    NOP	= 566,
    NOR	= 567,
    NOR64	= 568,
    NOR_MM	= 569,
    NegRxRy16	= 570,
    NotRxRy16	= 571,
    OR	= 572,
    OR64	= 573,
    OR_MM	= 574,
    ORi	= 575,
    ORi64	= 576,
    ORi_MM	= 577,
    OrRxRxRy16	= 578,
    PACKRL_PH	= 579,
    PICK_PH	= 580,
    PICK_QB	= 581,
    PRECEQU_PH_QBL	= 582,
    PRECEQU_PH_QBLA	= 583,
    PRECEQU_PH_QBR	= 584,
    PRECEQU_PH_QBRA	= 585,
    PRECEQ_W_PHL	= 586,
    PRECEQ_W_PHR	= 587,
    PRECEU_PH_QBL	= 588,
    PRECEU_PH_QBLA	= 589,
    PRECEU_PH_QBR	= 590,
    PRECEU_PH_QBRA	= 591,
    PRECRQU_S_QB_PH	= 592,
    PRECRQ_PH_W	= 593,
    PRECRQ_QB_PH	= 594,
    PRECRQ_RS_PH_W	= 595,
    PRECR_QB_PH	= 596,
    PRECR_SRA_PH_W	= 597,
    PRECR_SRA_R_PH_W	= 598,
    PREPEND	= 599,
    PseudoCMPU_EQ_QB	= 600,
    PseudoCMPU_LE_QB	= 601,
    PseudoCMPU_LT_QB	= 602,
    PseudoCMP_EQ_PH	= 603,
    PseudoCMP_LE_PH	= 604,
    PseudoCMP_LT_PH	= 605,
    PseudoCVT_D32_W	= 606,
    PseudoCVT_D64_L	= 607,
    PseudoCVT_D64_W	= 608,
    PseudoCVT_S_L	= 609,
    PseudoCVT_S_W	= 610,
    PseudoDMULT	= 611,
    PseudoDMULTu	= 612,
    PseudoDSDIV	= 613,
    PseudoDUDIV	= 614,
    PseudoLDC1	= 615,
    PseudoMADD	= 616,
    PseudoMADDU	= 617,
    PseudoMSUB	= 618,
    PseudoMSUBU	= 619,
    PseudoMULT	= 620,
    PseudoMULTu	= 621,
    PseudoPICK_PH	= 622,
    PseudoPICK_QB	= 623,
    PseudoSDC1	= 624,
    PseudoSDIV	= 625,
    PseudoUDIV	= 626,
    RADDU_W_QB	= 627,
    RDDSP	= 628,
    RDHWR	= 629,
    RDHWR64	= 630,
    REPLV_PH	= 631,
    REPLV_QB	= 632,
    REPL_PH	= 633,
    REPL_QB	= 634,
    RET	= 635,
    ROTR	= 636,
    ROTRV	= 637,
    ROTRV_MM	= 638,
    ROTR_MM	= 639,
    ROUND_L_D64	= 640,
    ROUND_L_S	= 641,
    ROUND_W_D32	= 642,
    ROUND_W_D64	= 643,
    ROUND_W_S	= 644,
    RestoreIncSpF16	= 645,
    RestoreRaF16	= 646,
    RetRA	= 647,
    RetRA16	= 648,
    SB	= 649,
    SB64	= 650,
    SB64_P8	= 651,
    SB_MM	= 652,
    SB_MM_P8	= 653,
    SB_P8	= 654,
    SC	= 655,
    SCD	= 656,
    SCD_P8	= 657,
    SC_P8	= 658,
    SD	= 659,
    SDC1	= 660,
    SDC164	= 661,
    SDC164_P8	= 662,
    SDIV	= 663,
    SDL	= 664,
    SDL_P8	= 665,
    SDR	= 666,
    SDR_P8	= 667,
    SDXC1	= 668,
    SDXC164	= 669,
    SDXC164_P8	= 670,
    SD_P8	= 671,
    SEB	= 672,
    SEB64	= 673,
    SEH	= 674,
    SEH64	= 675,
    SH	= 676,
    SH64	= 677,
    SH64_P8	= 678,
    SHILO	= 679,
    SHILOV	= 680,
    SHLLV_PH	= 681,
    SHLLV_QB	= 682,
    SHLLV_S_PH	= 683,
    SHLLV_S_W	= 684,
    SHLL_PH	= 685,
    SHLL_QB	= 686,
    SHLL_S_PH	= 687,
    SHLL_S_W	= 688,
    SHRAV_PH	= 689,
    SHRAV_QB	= 690,
    SHRAV_R_PH	= 691,
    SHRAV_R_QB	= 692,
    SHRAV_R_W	= 693,
    SHRA_PH	= 694,
    SHRA_QB	= 695,
    SHRA_R_PH	= 696,
    SHRA_R_QB	= 697,
    SHRA_R_W	= 698,
    SHRLV_PH	= 699,
    SHRLV_QB	= 700,
    SHRL_PH	= 701,
    SHRL_QB	= 702,
    SH_MM	= 703,
    SH_MM_P8	= 704,
    SH_P8	= 705,
    SLL	= 706,
    SLL64_32	= 707,
    SLL64_64	= 708,
    SLLV	= 709,
    SLLV_MM	= 710,
    SLL_MM	= 711,
    SLT	= 712,
    SLT64	= 713,
    SLT_MM	= 714,
    SLTi	= 715,
    SLTi64	= 716,
    SLTi_MM	= 717,
    SLTiu	= 718,
    SLTiu64	= 719,
    SLTiu_MM	= 720,
    SLTu	= 721,
    SLTu64	= 722,
    SLTu_MM	= 723,
    SRA	= 724,
    SRAV	= 725,
    SRAV_MM	= 726,
    SRA_MM	= 727,
    SRL	= 728,
    SRLV	= 729,
    SRLV_MM	= 730,
    SRL_MM	= 731,
    STORE_AC128	= 732,
    STORE_AC128_P8	= 733,
    STORE_AC64	= 734,
    STORE_AC64_P8	= 735,
    STORE_AC_DSP	= 736,
    STORE_AC_DSP_P8	= 737,
    STORE_CCOND_DSP	= 738,
    STORE_CCOND_DSP_P8	= 739,
    SUB	= 740,
    SUBQH_PH	= 741,
    SUBQH_R_PH	= 742,
    SUBQH_R_W	= 743,
    SUBQH_W	= 744,
    SUBQ_PH	= 745,
    SUBQ_S_PH	= 746,
    SUBQ_S_W	= 747,
    SUBUH_QB	= 748,
    SUBUH_R_QB	= 749,
    SUBU_PH	= 750,
    SUBU_QB	= 751,
    SUBU_S_PH	= 752,
    SUBU_S_QB	= 753,
    SUB_MM	= 754,
    SUBu	= 755,
    SUBu_MM	= 756,
    SUXC1	= 757,
    SUXC164	= 758,
    SW	= 759,
    SW64	= 760,
    SW64_P8	= 761,
    SWC1	= 762,
    SWC1_P8	= 763,
    SWL	= 764,
    SWL64	= 765,
    SWL64_P8	= 766,
    SWL_P8	= 767,
    SWR	= 768,
    SWR64	= 769,
    SWR64_P8	= 770,
    SWR_P8	= 771,
    SWXC1	= 772,
    SWXC1_P8	= 773,
    SW_MM	= 774,
    SW_MM_P8	= 775,
    SW_P8	= 776,
    SYNC	= 777,
    SYSCALL	= 778,
    SaveDecSpF16	= 779,
    SaveRaF16	= 780,
    SbRxRyOffMemX16	= 781,
    SelBeqZ	= 782,
    SelBneZ	= 783,
    SelTBteqZCmp	= 784,
    SelTBteqZCmpi	= 785,
    SelTBteqZSlt	= 786,
    SelTBteqZSlti	= 787,
    SelTBteqZSltiu	= 788,
    SelTBteqZSltu	= 789,
    SelTBtneZCmp	= 790,
    SelTBtneZCmpi	= 791,
    SelTBtneZSlt	= 792,
    SelTBtneZSlti	= 793,
    SelTBtneZSltiu	= 794,
    SelTBtneZSltu	= 795,
    ShRxRyOffMemX16	= 796,
    SllX16	= 797,
    SllvRxRy16	= 798,
    SltCCRxRy16	= 799,
    SltRxRy16	= 800,
    SltiCCRxImmX16	= 801,
    SltiRxImm16	= 802,
    SltiRxImmX16	= 803,
    SltiuCCRxImmX16	= 804,
    SltiuRxImm16	= 805,
    SltiuRxImmX16	= 806,
    SltuCCRxRy16	= 807,
    SltuRxRy16	= 808,
    SltuRxRyRz16	= 809,
    SraX16	= 810,
    SravRxRy16	= 811,
    SrlX16	= 812,
    SrlvRxRy16	= 813,
    SubuRxRyRz16	= 814,
    SwRxRyOffMemX16	= 815,
    SwRxSpImmX16	= 816,
    TAILCALL	= 817,
    TAILCALL64_R	= 818,
    TAILCALL_R	= 819,
    TEQ	= 820,
    TRAP	= 821,
    TRUNC_L_D64	= 822,
    TRUNC_L_S	= 823,
    TRUNC_W_D32	= 824,
    TRUNC_W_D64	= 825,
    TRUNC_W_S	= 826,
    UDIV	= 827,
    WRDSP	= 828,
    WSBH	= 829,
    XOR	= 830,
    XOR64	= 831,
    XOR_MM	= 832,
    XORi	= 833,
    XORi64	= 834,
    XORi_MM	= 835,
    XorRxRxRy16	= 836,
    INSTRUCTION_LIST_END = 837
  };
}
} // End llvm namespace 
#endif // GET_INSTRINFO_ENUM

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Descriptors                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const uint16_t ImplicitList1[] = { Mips::DSPOutFlag20, 0 };
static const uint16_t ImplicitList2[] = { Mips::DSPCarry, 0 };
static const uint16_t ImplicitList3[] = { Mips::SP, 0 };
static const uint16_t ImplicitList4[] = { Mips::AT, 0 };
static const uint16_t ImplicitList5[] = { Mips::RA, 0 };
static const uint16_t ImplicitList6[] = { Mips::DSPPos, 0 };
static const uint16_t ImplicitList7[] = { Mips::T8, 0 };
static const uint16_t ImplicitList8[] = { Mips::DSPCCond, 0 };
static const uint16_t ImplicitList9[] = { Mips::HI64, Mips::LO64, 0 };
static const uint16_t ImplicitList10[] = { Mips::DSPOutFlag16_19, 0 };
static const uint16_t ImplicitList11[] = { Mips::HI, Mips::LO, 0 };
static const uint16_t ImplicitList12[] = { Mips::DSPEFI, 0 };
static const uint16_t ImplicitList13[] = { Mips::DSPPos, Mips::DSPEFI, 0 };
static const uint16_t ImplicitList14[] = { Mips::DSPOutFlag23, 0 };
static const uint16_t ImplicitList15[] = { Mips::FCC0, 0 };
static const uint16_t ImplicitList16[] = { Mips::DSPPos, Mips::DSPSCount, 0 };
static const uint16_t ImplicitList17[] = { Mips::HI, 0 };
static const uint16_t ImplicitList18[] = { Mips::HI64, 0 };
static const uint16_t ImplicitList19[] = { Mips::LO, 0 };
static const uint16_t ImplicitList20[] = { Mips::LO64, 0 };
static const uint16_t ImplicitList21[] = { Mips::V0, Mips::V1, 0 };
static const uint16_t ImplicitList22[] = { Mips::DSPOutFlag21, 0 };
static const uint16_t ImplicitList23[] = { Mips::DSPOutFlag22, 0 };
static const uint16_t ImplicitList24[] = { Mips::S0, Mips::S1, Mips::S2, Mips::RA, Mips::SP, 0 };
static const uint16_t ImplicitList25[] = { Mips::RA, Mips::SP, Mips::S0, Mips::S1, Mips::S2, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo18[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsPlusSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::CCRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { Mips::CCRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo56[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { Mips::ACRegsDSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACRegsDSPRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo60[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACRegsDSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACRegsDSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo73[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo85[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo86[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { Mips::ACRegs128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { Mips::ACRegs128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { Mips::ACRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { Mips::ACRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { Mips::ACRegsDSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { Mips::ACRegsDSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo101[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo102[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::CPU16RegsPlusSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPUSPRegRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::HIRegsDSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::LORegsDSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo114[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo115[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo116[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo117[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo118[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo119[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo120[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo121[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo122[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo123[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo124[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo125[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo126[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo127[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { Mips::HIRegsDSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { Mips::ACRegsDSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACRegsDSPRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo131[] = { { Mips::LORegsDSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { Mips::ACRegsDSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo138[] = { { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { Mips::ACRegs128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { Mips::ACRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo143[] = { { Mips::ACRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::HWRegsRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::HWRegs64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { Mips::ACRegsDSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACRegsDSPRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo155[] = { { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };

extern const MCInstrDesc MipsInsts[] = {
  { 0,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #2 = PROLOG_LABEL
  { 3,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo4 },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo6 },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #11 = DBG_VALUE
  { 12,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo7 },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #16 = LIFETIME_END
  { 17,	2,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #17 = ABSQ_S_PH
  { 18,	2,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #18 = ABSQ_S_QB
  { 19,	2,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #19 = ABSQ_S_W
  { 20,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #20 = ADD
  { 21,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #21 = ADDQH_PH
  { 22,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #22 = ADDQH_R_PH
  { 23,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo12 },  // Inst #23 = ADDQH_R_W
  { 24,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo12 },  // Inst #24 = ADDQH_W
  { 25,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #25 = ADDQ_PH
  { 26,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #26 = ADDQ_S_PH
  { 27,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #27 = ADDQ_S_W
  { 28,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList2, OperandInfo12 },  // Inst #28 = ADDSC
  { 29,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #29 = ADDUH_QB
  { 30,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #30 = ADDUH_R_QB
  { 31,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #31 = ADDU_PH
  { 32,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #32 = ADDU_QB
  { 33,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #33 = ADDU_S_PH
  { 34,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #34 = ADDU_S_QB
  { 35,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList2, ImplicitList1, OperandInfo12 },  // Inst #35 = ADDWC
  { 36,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #36 = ADD_MM
  { 37,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #37 = ADDi
  { 38,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #38 = ADDi_MM
  { 39,	3,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #39 = ADDiu
  { 40,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #40 = ADDiu_MM
  { 41,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #41 = ADDu
  { 42,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #42 = ADDu_MM
  { 43,	1,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo2 },  // Inst #43 = ADJCALLSTACKDOWN
  { 44,	2,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo14 },  // Inst #44 = ADJCALLSTACKUP
  { 45,	3,	1,	3,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #45 = AND
  { 46,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo15 },  // Inst #46 = AND64
  { 47,	3,	1,	4,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #47 = AND_MM
  { 48,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #48 = ANDi
  { 49,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo16 },  // Inst #49 = ANDi64
  { 50,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #50 = ANDi_MM
  { 51,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17 },  // Inst #51 = APPEND
  { 52,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #52 = ATOMIC_CMP_SWAP_I16
  { 53,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #53 = ATOMIC_CMP_SWAP_I16_P8
  { 54,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #54 = ATOMIC_CMP_SWAP_I32
  { 55,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #55 = ATOMIC_CMP_SWAP_I32_P8
  { 56,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #56 = ATOMIC_CMP_SWAP_I64
  { 57,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #57 = ATOMIC_CMP_SWAP_I64_P8
  { 58,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #58 = ATOMIC_CMP_SWAP_I8
  { 59,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #59 = ATOMIC_CMP_SWAP_I8_P8
  { 60,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #60 = ATOMIC_LOAD_ADD_I16
  { 61,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #61 = ATOMIC_LOAD_ADD_I16_P8
  { 62,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #62 = ATOMIC_LOAD_ADD_I32
  { 63,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #63 = ATOMIC_LOAD_ADD_I32_P8
  { 64,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #64 = ATOMIC_LOAD_ADD_I64
  { 65,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #65 = ATOMIC_LOAD_ADD_I64_P8
  { 66,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #66 = ATOMIC_LOAD_ADD_I8
  { 67,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #67 = ATOMIC_LOAD_ADD_I8_P8
  { 68,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #68 = ATOMIC_LOAD_AND_I16
  { 69,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #69 = ATOMIC_LOAD_AND_I16_P8
  { 70,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #70 = ATOMIC_LOAD_AND_I32
  { 71,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #71 = ATOMIC_LOAD_AND_I32_P8
  { 72,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #72 = ATOMIC_LOAD_AND_I64
  { 73,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #73 = ATOMIC_LOAD_AND_I64_P8
  { 74,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #74 = ATOMIC_LOAD_AND_I8
  { 75,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #75 = ATOMIC_LOAD_AND_I8_P8
  { 76,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #76 = ATOMIC_LOAD_NAND_I16
  { 77,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #77 = ATOMIC_LOAD_NAND_I16_P8
  { 78,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #78 = ATOMIC_LOAD_NAND_I32
  { 79,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #79 = ATOMIC_LOAD_NAND_I32_P8
  { 80,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #80 = ATOMIC_LOAD_NAND_I64
  { 81,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #81 = ATOMIC_LOAD_NAND_I64_P8
  { 82,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #82 = ATOMIC_LOAD_NAND_I8
  { 83,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #83 = ATOMIC_LOAD_NAND_I8_P8
  { 84,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #84 = ATOMIC_LOAD_OR_I16
  { 85,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #85 = ATOMIC_LOAD_OR_I16_P8
  { 86,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #86 = ATOMIC_LOAD_OR_I32
  { 87,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #87 = ATOMIC_LOAD_OR_I32_P8
  { 88,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #88 = ATOMIC_LOAD_OR_I64
  { 89,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #89 = ATOMIC_LOAD_OR_I64_P8
  { 90,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #90 = ATOMIC_LOAD_OR_I8
  { 91,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #91 = ATOMIC_LOAD_OR_I8_P8
  { 92,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #92 = ATOMIC_LOAD_SUB_I16
  { 93,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #93 = ATOMIC_LOAD_SUB_I16_P8
  { 94,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #94 = ATOMIC_LOAD_SUB_I32
  { 95,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #95 = ATOMIC_LOAD_SUB_I32_P8
  { 96,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #96 = ATOMIC_LOAD_SUB_I64
  { 97,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #97 = ATOMIC_LOAD_SUB_I64_P8
  { 98,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #98 = ATOMIC_LOAD_SUB_I8
  { 99,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #99 = ATOMIC_LOAD_SUB_I8_P8
  { 100,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #100 = ATOMIC_LOAD_XOR_I16
  { 101,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #101 = ATOMIC_LOAD_XOR_I16_P8
  { 102,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #102 = ATOMIC_LOAD_XOR_I32
  { 103,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #103 = ATOMIC_LOAD_XOR_I32_P8
  { 104,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #104 = ATOMIC_LOAD_XOR_I64
  { 105,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #105 = ATOMIC_LOAD_XOR_I64_P8
  { 106,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #106 = ATOMIC_LOAD_XOR_I8
  { 107,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #107 = ATOMIC_LOAD_XOR_I8_P8
  { 108,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #108 = ATOMIC_SWAP_I16
  { 109,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #109 = ATOMIC_SWAP_I16_P8
  { 110,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #110 = ATOMIC_SWAP_I32
  { 111,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #111 = ATOMIC_SWAP_I32_P8
  { 112,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #112 = ATOMIC_SWAP_I64
  { 113,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #113 = ATOMIC_SWAP_I64_P8
  { 114,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #114 = ATOMIC_SWAP_I8
  { 115,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #115 = ATOMIC_SWAP_I8_P8
  { 116,	2,	1,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #116 = AddiuRxImmX16
  { 117,	2,	1,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #117 = AddiuRxPcImmX16
  { 118,	3,	1,	4,	2,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo26 },  // Inst #118 = AddiuRxRxImm16
  { 119,	3,	1,	4,	4,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo26 },  // Inst #119 = AddiuRxRxImmX16
  { 120,	3,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo27 },  // Inst #120 = AddiuRxRyOffMemX16
  { 121,	1,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo5 },  // Inst #121 = AddiuSpImm16
  { 122,	1,	0,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo5 },  // Inst #122 = AddiuSpImmX16
  { 123,	3,	1,	4,	2,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #123 = AdduRxRyRz16
  { 124,	3,	1,	4,	2,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #124 = AndRxRxRy16
  { 125,	1,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo30 },  // Inst #125 = B
  { 126,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17 },  // Inst #126 = BALIGN
  { 127,	1,	0,	5,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList5, OperandInfo30 },  // Inst #127 = BAL_BR
  { 128,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x5ULL, NULL, ImplicitList4, OperandInfo31 },  // Inst #128 = BC1F
  { 129,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x5ULL, NULL, ImplicitList4, OperandInfo31 },  // Inst #129 = BC1T
  { 130,	3,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo32 },  // Inst #130 = BEQ
  { 131,	3,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo33 },  // Inst #131 = BEQ64
  { 132,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo34 },  // Inst #132 = BGEZ
  { 133,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo35 },  // Inst #133 = BGEZ64
  { 134,	2,	0,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList5, OperandInfo34 },  // Inst #134 = BGEZAL
  { 135,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo34 },  // Inst #135 = BGTZ
  { 136,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo35 },  // Inst #136 = BGTZ64
  { 137,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo9 },  // Inst #137 = BITREV
  { 138,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo34 },  // Inst #138 = BLEZ
  { 139,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo35 },  // Inst #139 = BLEZ64
  { 140,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo34 },  // Inst #140 = BLTZ
  { 141,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo35 },  // Inst #141 = BLTZ64
  { 142,	2,	0,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList5, OperandInfo34 },  // Inst #142 = BLTZAL
  { 143,	3,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo32 },  // Inst #143 = BNE
  { 144,	3,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo33 },  // Inst #144 = BNE64
  { 145,	1,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo30 },  // Inst #145 = BPOSGE32
  { 146,	1,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList6, NULL, OperandInfo36 },  // Inst #146 = BPOSGE32_PSEUDO
  { 147,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo7 },  // Inst #147 = BREAK
  { 148,	2,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #148 = BeqzRxImm16
  { 149,	2,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #149 = BeqzRxImmX16
  { 150,	1,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo30 },  // Inst #150 = BimmX16
  { 151,	2,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #151 = BnezRxImm16
  { 152,	2,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #152 = BnezRxImmX16
  { 153,	0,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #153 = Break16
  { 154,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #154 = BteqzT8CmpX16
  { 155,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #155 = BteqzT8CmpiX16
  { 156,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #156 = BteqzT8SltX16
  { 157,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #157 = BteqzT8SltiX16
  { 158,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #158 = BteqzT8SltiuX16
  { 159,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #159 = BteqzT8SltuX16
  { 160,	1,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, NULL, OperandInfo5 },  // Inst #160 = BteqzX16
  { 161,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #161 = BtnezT8CmpX16
  { 162,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #162 = BtnezT8CmpiX16
  { 163,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #163 = BtnezT8SltX16
  { 164,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #164 = BtnezT8SltiX16
  { 165,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #165 = BtnezT8SltiuX16
  { 166,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #166 = BtnezT8SltuX16
  { 167,	1,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, NULL, OperandInfo5 },  // Inst #167 = BtnezX16
  { 168,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #168 = BuildPairF64
  { 169,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #169 = CEIL_L_D64
  { 170,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo42 },  // Inst #170 = CEIL_L_S
  { 171,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo43 },  // Inst #171 = CEIL_W_D32
  { 172,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #172 = CEIL_W_D64
  { 173,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #173 = CEIL_W_S
  { 174,	2,	1,	7,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo46 },  // Inst #174 = CFC1
  { 175,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo47 },  // Inst #175 = CLO
  { 176,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo47 },  // Inst #176 = CLZ
  { 177,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo48 },  // Inst #177 = CMPGDU_EQ_QB
  { 178,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo48 },  // Inst #178 = CMPGDU_LE_QB
  { 179,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo48 },  // Inst #179 = CMPGDU_LT_QB
  { 180,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo48 },  // Inst #180 = CMPGU_EQ_QB
  { 181,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo48 },  // Inst #181 = CMPGU_LE_QB
  { 182,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo48 },  // Inst #182 = CMPGU_LT_QB
  { 183,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo8 },  // Inst #183 = CMPU_EQ_QB
  { 184,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo8 },  // Inst #184 = CMPU_LE_QB
  { 185,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo8 },  // Inst #185 = CMPU_LT_QB
  { 186,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo8 },  // Inst #186 = CMP_EQ_PH
  { 187,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo8 },  // Inst #187 = CMP_LE_PH
  { 188,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo8 },  // Inst #188 = CMP_LT_PH
  { 189,	2,	1,	7,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo49 },  // Inst #189 = CTC1
  { 190,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #190 = CVT_D32_S
  { 191,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo50 },  // Inst #191 = CVT_D32_W
  { 192,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #192 = CVT_D64_L
  { 193,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo42 },  // Inst #193 = CVT_D64_S
  { 194,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo42 },  // Inst #194 = CVT_D64_W
  { 195,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #195 = CVT_L_D64
  { 196,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo42 },  // Inst #196 = CVT_L_S
  { 197,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo43 },  // Inst #197 = CVT_S_D32
  { 198,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #198 = CVT_S_D64
  { 199,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #199 = CVT_S_L
  { 200,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #200 = CVT_S_W
  { 201,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo43 },  // Inst #201 = CVT_W_D32
  { 202,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #202 = CVT_W_D64
  { 203,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #203 = CVT_W_S
  { 204,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #204 = C_EQ_D32
  { 205,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #205 = C_EQ_D64
  { 206,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #206 = C_EQ_S
  { 207,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #207 = C_F_D32
  { 208,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #208 = C_F_D64
  { 209,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #209 = C_F_S
  { 210,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #210 = C_LE_D32
  { 211,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #211 = C_LE_D64
  { 212,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #212 = C_LE_S
  { 213,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #213 = C_LT_D32
  { 214,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #214 = C_LT_D64
  { 215,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #215 = C_LT_S
  { 216,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #216 = C_NGE_D32
  { 217,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #217 = C_NGE_D64
  { 218,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #218 = C_NGE_S
  { 219,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #219 = C_NGLE_D32
  { 220,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #220 = C_NGLE_D64
  { 221,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #221 = C_NGLE_S
  { 222,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #222 = C_NGL_D32
  { 223,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #223 = C_NGL_D64
  { 224,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #224 = C_NGL_S
  { 225,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #225 = C_NGT_D32
  { 226,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #226 = C_NGT_D64
  { 227,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #227 = C_NGT_S
  { 228,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #228 = C_OLE_D32
  { 229,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #229 = C_OLE_D64
  { 230,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #230 = C_OLE_S
  { 231,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #231 = C_OLT_D32
  { 232,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #232 = C_OLT_D64
  { 233,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #233 = C_OLT_S
  { 234,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #234 = C_SEQ_D32
  { 235,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #235 = C_SEQ_D64
  { 236,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #236 = C_SEQ_S
  { 237,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #237 = C_SF_D32
  { 238,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #238 = C_SF_D64
  { 239,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #239 = C_SF_S
  { 240,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #240 = C_UEQ_D32
  { 241,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #241 = C_UEQ_D64
  { 242,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #242 = C_UEQ_S
  { 243,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #243 = C_ULE_D32
  { 244,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #244 = C_ULE_D64
  { 245,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #245 = C_ULE_S
  { 246,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #246 = C_ULT_D32
  { 247,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #247 = C_ULT_D64
  { 248,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #248 = C_ULT_S
  { 249,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #249 = C_UN_D32
  { 250,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #250 = C_UN_D64
  { 251,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #251 = C_UN_S
  { 252,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo52 },  // Inst #252 = CmpRxRy16
  { 253,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo25 },  // Inst #253 = CmpiRxImm16
  { 254,	2,	0,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo25 },  // Inst #254 = CmpiRxImmX16
  { 255,	1,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #255 = Constant32
  { 256,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo15 },  // Inst #256 = DADD
  { 257,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo16 },  // Inst #257 = DADDi
  { 258,	3,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo16 },  // Inst #258 = DADDiu
  { 259,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo15 },  // Inst #259 = DADDu
  { 260,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo53 },  // Inst #260 = DCLO
  { 261,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo53 },  // Inst #261 = DCLZ
  { 262,	0,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, 0 },  // Inst #262 = DERET
  { 263,	4,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo54 },  // Inst #263 = DEXT
  { 264,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo54 },  // Inst #264 = DEXTM
  { 265,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo54 },  // Inst #265 = DEXTU
  { 266,	5,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo55 },  // Inst #266 = DINS
  { 267,	5,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo55 },  // Inst #267 = DINSM
  { 268,	5,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo55 },  // Inst #268 = DINSU
  { 269,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo16 },  // Inst #269 = DMFC0_3OP64
  { 270,	2,	1,	9,	4,	0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo56 },  // Inst #270 = DMFC1
  { 271,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo16 },  // Inst #271 = DMFC2_3OP64
  { 272,	3,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo57 },  // Inst #272 = DMTC0_3OP64
  { 273,	2,	1,	9,	4,	0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo58 },  // Inst #273 = DMTC1
  { 274,	3,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo57 },  // Inst #274 = DMTC2_3OP64
  { 275,	2,	0,	10,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList9, OperandInfo53 },  // Inst #275 = DMULT
  { 276,	2,	0,	10,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList9, OperandInfo53 },  // Inst #276 = DMULTu
  { 277,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo59 },  // Inst #277 = DPAQX_SA_W_PH
  { 278,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo59 },  // Inst #278 = DPAQX_S_W_PH
  { 279,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo59 },  // Inst #279 = DPAQ_SA_L_W
  { 280,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo59 },  // Inst #280 = DPAQ_S_W_PH
  { 281,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo59 },  // Inst #281 = DPAU_H_QBL
  { 282,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo59 },  // Inst #282 = DPAU_H_QBR
  { 283,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo59 },  // Inst #283 = DPAX_W_PH
  { 284,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo59 },  // Inst #284 = DPA_W_PH
  { 285,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo59 },  // Inst #285 = DPSQX_SA_W_PH
  { 286,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo59 },  // Inst #286 = DPSQX_S_W_PH
  { 287,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo59 },  // Inst #287 = DPSQ_SA_L_W
  { 288,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo59 },  // Inst #288 = DPSQ_S_W_PH
  { 289,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo59 },  // Inst #289 = DPSU_H_QBL
  { 290,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo59 },  // Inst #290 = DPSU_H_QBR
  { 291,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo59 },  // Inst #291 = DPSX_W_PH
  { 292,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo59 },  // Inst #292 = DPS_W_PH
  { 293,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo16 },  // Inst #293 = DROTR
  { 294,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo60 },  // Inst #294 = DROTRV
  { 295,	2,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo53 },  // Inst #295 = DSBH
  { 296,	2,	0,	11,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList9, OperandInfo53 },  // Inst #296 = DSDIV
  { 297,	2,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo53 },  // Inst #297 = DSHD
  { 298,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo16 },  // Inst #298 = DSLL
  { 299,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo16 },  // Inst #299 = DSLL32
  { 300,	2,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo61 },  // Inst #300 = DSLL64_32
  { 301,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo60 },  // Inst #301 = DSLLV
  { 302,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo16 },  // Inst #302 = DSRA
  { 303,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo16 },  // Inst #303 = DSRA32
  { 304,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo60 },  // Inst #304 = DSRAV
  { 305,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo16 },  // Inst #305 = DSRL
  { 306,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo16 },  // Inst #306 = DSRL32
  { 307,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo60 },  // Inst #307 = DSRLV
  { 308,	3,	1,	1,	4,	0|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo15 },  // Inst #308 = DSUBu
  { 309,	2,	0,	11,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList9, OperandInfo53 },  // Inst #309 = DUDIV
  { 310,	2,	0,	4,	2,	0, 0x0ULL, NULL, ImplicitList11, OperandInfo52 },  // Inst #310 = DivRxRy16
  { 311,	2,	0,	4,	2,	0, 0x0ULL, NULL, ImplicitList11, OperandInfo52 },  // Inst #311 = DivuRxRy16
  { 312,	0,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, 0 },  // Inst #312 = ERET
  { 313,	4,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo62 },  // Inst #313 = EXT
  { 314,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList6, ImplicitList12, OperandInfo63 },  // Inst #314 = EXTP
  { 315,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList6, ImplicitList13, OperandInfo63 },  // Inst #315 = EXTPDP
  { 316,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList6, ImplicitList13, OperandInfo64 },  // Inst #316 = EXTPDPV
  { 317,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList6, ImplicitList12, OperandInfo64 },  // Inst #317 = EXTPV
  { 318,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo64 },  // Inst #318 = EXTRV_RS_W
  { 319,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo64 },  // Inst #319 = EXTRV_R_W
  { 320,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo64 },  // Inst #320 = EXTRV_S_H
  { 321,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo64 },  // Inst #321 = EXTRV_W
  { 322,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo63 },  // Inst #322 = EXTR_RS_W
  { 323,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo63 },  // Inst #323 = EXTR_R_W
  { 324,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo63 },  // Inst #324 = EXTR_S_H
  { 325,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo63 },  // Inst #325 = EXTR_W
  { 326,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo65 },  // Inst #326 = ExtractElementF64
  { 327,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #327 = FABS_D32
  { 328,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #328 = FABS_D64
  { 329,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #329 = FABS_S
  { 330,	3,	1,	12,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo66 },  // Inst #330 = FADD_D32
  { 331,	3,	1,	12,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo67 },  // Inst #331 = FADD_D64
  { 332,	3,	1,	12,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo68 },  // Inst #332 = FADD_S
  { 333,	3,	0,	8,	4,	0, 0x4ULL, NULL, ImplicitList15, OperandInfo69 },  // Inst #333 = FCMP_D32
  { 334,	3,	0,	8,	4,	0, 0x4ULL, NULL, ImplicitList15, OperandInfo70 },  // Inst #334 = FCMP_D64
  { 335,	3,	0,	8,	4,	0, 0x4ULL, NULL, ImplicitList15, OperandInfo71 },  // Inst #335 = FCMP_S32
  { 336,	3,	1,	13,	4,	0, 0x4ULL, NULL, NULL, OperandInfo66 },  // Inst #336 = FDIV_D32
  { 337,	3,	1,	13,	4,	0, 0x4ULL, NULL, NULL, OperandInfo67 },  // Inst #337 = FDIV_D64
  { 338,	3,	1,	14,	4,	0, 0x4ULL, NULL, NULL, OperandInfo68 },  // Inst #338 = FDIV_S
  { 339,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #339 = FLOOR_L_D64
  { 340,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo42 },  // Inst #340 = FLOOR_L_S
  { 341,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo43 },  // Inst #341 = FLOOR_W_D32
  { 342,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #342 = FLOOR_W_D64
  { 343,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #343 = FLOOR_W_S
  { 344,	2,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #344 = FMOV_D32
  { 345,	2,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #345 = FMOV_D64
  { 346,	2,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #346 = FMOV_S
  { 347,	3,	1,	15,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo66 },  // Inst #347 = FMUL_D32
  { 348,	3,	1,	15,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo67 },  // Inst #348 = FMUL_D64
  { 349,	3,	1,	16,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo68 },  // Inst #349 = FMUL_S
  { 350,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #350 = FNEG_D32
  { 351,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #351 = FNEG_D64
  { 352,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #352 = FNEG_S
  { 353,	2,	1,	17,	4,	0, 0x4ULL, NULL, NULL, OperandInfo51 },  // Inst #353 = FSQRT_D32
  { 354,	2,	1,	17,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #354 = FSQRT_D64
  { 355,	2,	1,	18,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #355 = FSQRT_S
  { 356,	3,	1,	12,	4,	0, 0x4ULL, NULL, NULL, OperandInfo66 },  // Inst #356 = FSUB_D32
  { 357,	3,	1,	12,	4,	0, 0x4ULL, NULL, NULL, OperandInfo67 },  // Inst #357 = FSUB_D64
  { 358,	3,	1,	12,	4,	0, 0x4ULL, NULL, NULL, OperandInfo68 },  // Inst #358 = FSUB_S
  { 359,	5,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo72 },  // Inst #359 = INS
  { 360,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, ImplicitList16, NULL, OperandInfo73 },  // Inst #360 = INSV
  { 361,	1,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x3ULL, NULL, ImplicitList4, OperandInfo5 },  // Inst #361 = J
  { 362,	1,	0,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call), 0x3ULL, NULL, ImplicitList5, OperandInfo5 },  // Inst #362 = JAL
  { 363,	2,	1,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList5, OperandInfo47 },  // Inst #363 = JALR
  { 364,	2,	1,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList5, OperandInfo53 },  // Inst #364 = JALR64
  { 365,	1,	0,	5,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::DelaySlot)|(1<<MCID::Call), 0x0ULL, NULL, ImplicitList5, OperandInfo74 },  // Inst #365 = JALR64Pseudo
  { 366,	1,	0,	5,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::DelaySlot)|(1<<MCID::Call), 0x0ULL, NULL, ImplicitList5, OperandInfo75 },  // Inst #366 = JALRPseudo
  { 367,	1,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x1ULL, NULL, NULL, OperandInfo75 },  // Inst #367 = JR
  { 368,	1,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x1ULL, NULL, NULL, OperandInfo74 },  // Inst #368 = JR64
  { 369,	1,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #369 = Jal16
  { 370,	0,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #370 = JrRa16
  { 371,	0,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #371 = JrcRa16
  { 372,	1,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo76 },  // Inst #372 = JrcRx16
  { 373,	1,	0,	5,	2,	0|(1<<MCID::Call), 0x0ULL, NULL, NULL, OperandInfo76 },  // Inst #373 = JumpLinkReg16
  { 374,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #374 = LB
  { 375,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #375 = LB64
  { 376,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #376 = LB64_P8
  { 377,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo12 },  // Inst #377 = LBUX
  { 378,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #378 = LB_MM
  { 379,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #379 = LB_MM_P8
  { 380,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #380 = LB_P8
  { 381,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #381 = LBu
  { 382,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #382 = LBu64
  { 383,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #383 = LBu64_P8
  { 384,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #384 = LBu_MM
  { 385,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #385 = LBu_MM_P8
  { 386,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #386 = LBu_P8
  { 387,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #387 = LD
  { 388,	3,	1,	19,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo81 },  // Inst #388 = LDC1
  { 389,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo82 },  // Inst #389 = LDC164
  { 390,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo83 },  // Inst #390 = LDC164_P8
  { 391,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo84 },  // Inst #391 = LDL
  { 392,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo85 },  // Inst #392 = LDL_P8
  { 393,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo84 },  // Inst #393 = LDR
  { 394,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo85 },  // Inst #394 = LDR_P8
  { 395,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #395 = LDXC1
  { 396,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo86 },  // Inst #396 = LDXC164
  { 397,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo87 },  // Inst #397 = LDXC164_P8
  { 398,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #398 = LD_P8
  { 399,	3,	1,	0,	4,	0, 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #399 = LEA_ADDiu
  { 400,	3,	1,	0,	4,	0, 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #400 = LEA_ADDiu64
  { 401,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #401 = LH
  { 402,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #402 = LH64
  { 403,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #403 = LH64_P8
  { 404,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo12 },  // Inst #404 = LHX
  { 405,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #405 = LH_MM
  { 406,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #406 = LH_MM_P8
  { 407,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #407 = LH_P8
  { 408,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #408 = LHu
  { 409,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #409 = LHu64
  { 410,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #410 = LHu64_P8
  { 411,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #411 = LHu_MM
  { 412,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #412 = LHu_MM_P8
  { 413,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #413 = LHu_P8
  { 414,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #414 = LL
  { 415,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #415 = LLD
  { 416,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #416 = LLD_P8
  { 417,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #417 = LL_P8
  { 418,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo88 },  // Inst #418 = LOAD_AC128
  { 419,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo89 },  // Inst #419 = LOAD_AC128_P8
  { 420,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo90 },  // Inst #420 = LOAD_AC64
  { 421,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo91 },  // Inst #421 = LOAD_AC64_P8
  { 422,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo92 },  // Inst #422 = LOAD_AC_DSP
  { 423,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo93 },  // Inst #423 = LOAD_AC_DSP_P8
  { 424,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo94 },  // Inst #424 = LOAD_CCOND_DSP
  { 425,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo95 },  // Inst #425 = LOAD_CCOND_DSP_P8
  { 426,	3,	1,	19,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #426 = LUXC1
  { 427,	3,	1,	19,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo86 },  // Inst #427 = LUXC164
  { 428,	2,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo96 },  // Inst #428 = LUi
  { 429,	2,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo97 },  // Inst #429 = LUi64
  { 430,	2,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo96 },  // Inst #430 = LUi_MM
  { 431,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #431 = LW
  { 432,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #432 = LW64
  { 433,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #433 = LW64_P8
  { 434,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo98 },  // Inst #434 = LWC1
  { 435,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo99 },  // Inst #435 = LWC1_P8
  { 436,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo100 },  // Inst #436 = LWL
  { 437,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo84 },  // Inst #437 = LWL64
  { 438,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo85 },  // Inst #438 = LWL64_P8
  { 439,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo101 },  // Inst #439 = LWL_P8
  { 440,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo100 },  // Inst #440 = LWR
  { 441,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo84 },  // Inst #441 = LWR64
  { 442,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo85 },  // Inst #442 = LWR64_P8
  { 443,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo101 },  // Inst #443 = LWR_P8
  { 444,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo12 },  // Inst #444 = LWX
  { 445,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo102 },  // Inst #445 = LWXC1
  { 446,	3,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo103 },  // Inst #446 = LWXC1_P8
  { 447,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #447 = LW_MM
  { 448,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #448 = LW_MM_P8
  { 449,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #449 = LW_P8
  { 450,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #450 = LWu
  { 451,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #451 = LWu_P8
  { 452,	4,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #452 = LbRxRyOffMemX16
  { 453,	4,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #453 = LbuRxRyOffMemX16
  { 454,	4,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #454 = LhRxRyOffMemX16
  { 455,	4,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #455 = LhuRxRyOffMemX16
  { 456,	2,	1,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #456 = LiRxImm16
  { 457,	2,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #457 = LiRxImmX16
  { 458,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo96 },  // Inst #458 = LoadAddr32Imm
  { 459,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo77 },  // Inst #459 = LoadAddr32Reg
  { 460,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo96 },  // Inst #460 = LoadImm32Reg
  { 461,	2,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #461 = LwConstant32
  { 462,	4,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #462 = LwRxRyOffMemX16
  { 463,	3,	1,	20,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, NULL, OperandInfo105 },  // Inst #463 = LwRxSpImmX16
  { 464,	2,	0,	10,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo47 },  // Inst #464 = MADD
  { 465,	2,	0,	10,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo47 },  // Inst #465 = MADDU
  { 466,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo59 },  // Inst #466 = MADDU_DSP
  { 467,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo106 },  // Inst #467 = MADD_D32
  { 468,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo107 },  // Inst #468 = MADD_D64
  { 469,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo59 },  // Inst #469 = MADD_DSP
  { 470,	4,	1,	16,	4,	0, 0x4ULL, NULL, NULL, OperandInfo108 },  // Inst #470 = MADD_S
  { 471,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo59 },  // Inst #471 = MAQ_SA_W_PHL
  { 472,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo59 },  // Inst #472 = MAQ_SA_W_PHR
  { 473,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo59 },  // Inst #473 = MAQ_S_W_PHL
  { 474,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo59 },  // Inst #474 = MAQ_S_W_PHR
  { 475,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo13 },  // Inst #475 = MFC0_3OP
  { 476,	2,	1,	9,	4,	0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo109 },  // Inst #476 = MFC1
  { 477,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo13 },  // Inst #477 = MFC2_3OP
  { 478,	1,	1,	21,	4,	0, 0x1ULL, ImplicitList17, NULL, OperandInfo75 },  // Inst #478 = MFHI
  { 479,	1,	1,	21,	4,	0, 0x1ULL, ImplicitList18, NULL, OperandInfo74 },  // Inst #479 = MFHI64
  { 480,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo110 },  // Inst #480 = MFHI_DSP
  { 481,	1,	1,	21,	4,	0, 0x1ULL, ImplicitList19, NULL, OperandInfo75 },  // Inst #481 = MFLO
  { 482,	1,	1,	21,	4,	0, 0x1ULL, ImplicitList20, NULL, OperandInfo74 },  // Inst #482 = MFLO64
  { 483,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo111 },  // Inst #483 = MFLO_DSP
  { 484,	2,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, ImplicitList21, NULL, OperandInfo9 },  // Inst #484 = MIPSeh_return32
  { 485,	2,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, ImplicitList21, NULL, OperandInfo112 },  // Inst #485 = MIPSeh_return64
  { 486,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo12 },  // Inst #486 = MODSUB
  { 487,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo113 },  // Inst #487 = MOVF_D32
  { 488,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo114 },  // Inst #488 = MOVF_D64
  { 489,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo115 },  // Inst #489 = MOVF_I
  { 490,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo116 },  // Inst #490 = MOVF_I64
  { 491,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo117 },  // Inst #491 = MOVF_S
  { 492,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo118 },  // Inst #492 = MOVN_I64_D64
  { 493,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo119 },  // Inst #493 = MOVN_I64_I
  { 494,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo120 },  // Inst #494 = MOVN_I64_I64
  { 495,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo121 },  // Inst #495 = MOVN_I64_S
  { 496,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo122 },  // Inst #496 = MOVN_I_D32
  { 497,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo123 },  // Inst #497 = MOVN_I_D64
  { 498,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo124 },  // Inst #498 = MOVN_I_I
  { 499,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo125 },  // Inst #499 = MOVN_I_I64
  { 500,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo126 },  // Inst #500 = MOVN_I_S
  { 501,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo113 },  // Inst #501 = MOVT_D32
  { 502,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo114 },  // Inst #502 = MOVT_D64
  { 503,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo115 },  // Inst #503 = MOVT_I
  { 504,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo116 },  // Inst #504 = MOVT_I64
  { 505,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo117 },  // Inst #505 = MOVT_S
  { 506,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo118 },  // Inst #506 = MOVZ_I64_D64
  { 507,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo119 },  // Inst #507 = MOVZ_I64_I
  { 508,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo120 },  // Inst #508 = MOVZ_I64_I64
  { 509,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo121 },  // Inst #509 = MOVZ_I64_S
  { 510,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo122 },  // Inst #510 = MOVZ_I_D32
  { 511,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo123 },  // Inst #511 = MOVZ_I_D64
  { 512,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo124 },  // Inst #512 = MOVZ_I_I
  { 513,	4,	1,	0,	4,	0, 0x4ULL, NULL, NULL, OperandInfo125 },  // Inst #513 = MOVZ_I_I64
  { 514,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo126 },  // Inst #514 = MOVZ_I_S
  { 515,	2,	0,	10,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo47 },  // Inst #515 = MSUB
  { 516,	2,	0,	10,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo47 },  // Inst #516 = MSUBU
  { 517,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo59 },  // Inst #517 = MSUBU_DSP
  { 518,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo106 },  // Inst #518 = MSUB_D32
  { 519,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo107 },  // Inst #519 = MSUB_D64
  { 520,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo59 },  // Inst #520 = MSUB_DSP
  { 521,	4,	1,	16,	4,	0, 0x4ULL, NULL, NULL, OperandInfo108 },  // Inst #521 = MSUB_S
  { 522,	3,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo127 },  // Inst #522 = MTC0_3OP
  { 523,	2,	1,	9,	4,	0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo128 },  // Inst #523 = MTC1
  { 524,	3,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo127 },  // Inst #524 = MTC2_3OP
  { 525,	1,	0,	21,	4,	0, 0x1ULL, NULL, ImplicitList17, OperandInfo75 },  // Inst #525 = MTHI
  { 526,	1,	0,	21,	4,	0, 0x1ULL, NULL, ImplicitList18, OperandInfo74 },  // Inst #526 = MTHI64
  { 527,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo129 },  // Inst #527 = MTHI_DSP
  { 528,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList6, OperandInfo130 },  // Inst #528 = MTHLIP
  { 529,	1,	0,	21,	4,	0, 0x1ULL, NULL, ImplicitList19, OperandInfo75 },  // Inst #529 = MTLO
  { 530,	1,	0,	21,	4,	0, 0x1ULL, NULL, ImplicitList20, OperandInfo74 },  // Inst #530 = MTLO64
  { 531,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo131 },  // Inst #531 = MTLO_DSP
  { 532,	3,	1,	22,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #532 = MUL
  { 533,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo48 },  // Inst #533 = MULEQ_S_W_PHL
  { 534,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo48 },  // Inst #534 = MULEQ_S_W_PHR
  { 535,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo11 },  // Inst #535 = MULEU_S_PH_QBL
  { 536,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo11 },  // Inst #536 = MULEU_S_PH_QBR
  { 537,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo11 },  // Inst #537 = MULQ_RS_PH
  { 538,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo12 },  // Inst #538 = MULQ_RS_W
  { 539,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo11 },  // Inst #539 = MULQ_S_PH
  { 540,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo12 },  // Inst #540 = MULQ_S_W
  { 541,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo59 },  // Inst #541 = MULSAQ_S_W_PH
  { 542,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo59 },  // Inst #542 = MULSA_W_PH
  { 543,	2,	0,	10,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList11, OperandInfo47 },  // Inst #543 = MULT
  { 544,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo132 },  // Inst #544 = MULTU_DSP
  { 545,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo132 },  // Inst #545 = MULT_DSP
  { 546,	2,	0,	22,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList11, OperandInfo47 },  // Inst #546 = MULT_MM
  { 547,	2,	0,	10,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList11, OperandInfo47 },  // Inst #547 = MULTu
  { 548,	2,	0,	22,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList11, OperandInfo47 },  // Inst #548 = MULTu_MM
  { 549,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #549 = MUL_MM
  { 550,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo11 },  // Inst #550 = MUL_PH
  { 551,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList22, OperandInfo11 },  // Inst #551 = MUL_S_PH
  { 552,	1,	1,	4,	2,	0, 0x0ULL, ImplicitList17, NULL, OperandInfo76 },  // Inst #552 = Mfhi16
  { 553,	1,	1,	4,	2,	0, 0x0ULL, ImplicitList19, NULL, OperandInfo76 },  // Inst #553 = Mflo16
  { 554,	2,	1,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo133 },  // Inst #554 = Move32R16
  { 555,	2,	1,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo134 },  // Inst #555 = MoveR3216
  { 556,	2,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList11, OperandInfo52 },  // Inst #556 = MultRxRy16
  { 557,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList11, OperandInfo28 },  // Inst #557 = MultRxRyRz16
  { 558,	2,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList11, OperandInfo52 },  // Inst #558 = MultuRxRy16
  { 559,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList11, OperandInfo28 },  // Inst #559 = MultuRxRyRz16
  { 560,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo106 },  // Inst #560 = NMADD_D32
  { 561,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo107 },  // Inst #561 = NMADD_D64
  { 562,	4,	1,	16,	4,	0, 0x4ULL, NULL, NULL, OperandInfo108 },  // Inst #562 = NMADD_S
  { 563,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo106 },  // Inst #563 = NMSUB_D32
  { 564,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo107 },  // Inst #564 = NMSUB_D64
  { 565,	4,	1,	16,	4,	0, 0x4ULL, NULL, NULL, OperandInfo108 },  // Inst #565 = NMSUB_S
  { 566,	0,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #566 = NOP
  { 567,	3,	1,	1,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #567 = NOR
  { 568,	3,	1,	1,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo15 },  // Inst #568 = NOR64
  { 569,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #569 = NOR_MM
  { 570,	2,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo52 },  // Inst #570 = NegRxRy16
  { 571,	2,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo52 },  // Inst #571 = NotRxRy16
  { 572,	3,	1,	3,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #572 = OR
  { 573,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo15 },  // Inst #573 = OR64
  { 574,	3,	1,	4,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #574 = OR_MM
  { 575,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #575 = ORi
  { 576,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo16 },  // Inst #576 = ORi64
  { 577,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #577 = ORi_MM
  { 578,	3,	1,	4,	2,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #578 = OrRxRxRy16
  { 579,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #579 = PACKRL_PH
  { 580,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, ImplicitList8, NULL, OperandInfo11 },  // Inst #580 = PICK_PH
  { 581,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, ImplicitList8, NULL, OperandInfo11 },  // Inst #581 = PICK_QB
  { 582,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #582 = PRECEQU_PH_QBL
  { 583,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #583 = PRECEQU_PH_QBLA
  { 584,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #584 = PRECEQU_PH_QBR
  { 585,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #585 = PRECEQU_PH_QBRA
  { 586,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo135 },  // Inst #586 = PRECEQ_W_PHL
  { 587,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo135 },  // Inst #587 = PRECEQ_W_PHR
  { 588,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #588 = PRECEU_PH_QBL
  { 589,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #589 = PRECEU_PH_QBLA
  { 590,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #590 = PRECEU_PH_QBR
  { 591,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo8 },  // Inst #591 = PRECEU_PH_QBRA
  { 592,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo11 },  // Inst #592 = PRECRQU_S_QB_PH
  { 593,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo136 },  // Inst #593 = PRECRQ_PH_W
  { 594,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #594 = PRECRQ_QB_PH
  { 595,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo136 },  // Inst #595 = PRECRQ_RS_PH_W
  { 596,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #596 = PRECR_QB_PH
  { 597,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo137 },  // Inst #597 = PRECR_SRA_PH_W
  { 598,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo137 },  // Inst #598 = PRECR_SRA_R_PH_W
  { 599,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17 },  // Inst #599 = PREPEND
  { 600,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo138 },  // Inst #600 = PseudoCMPU_EQ_QB
  { 601,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo138 },  // Inst #601 = PseudoCMPU_LE_QB
  { 602,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo138 },  // Inst #602 = PseudoCMPU_LT_QB
  { 603,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo138 },  // Inst #603 = PseudoCMP_EQ_PH
  { 604,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo138 },  // Inst #604 = PseudoCMP_LE_PH
  { 605,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo138 },  // Inst #605 = PseudoCMP_LT_PH
  { 606,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo139 },  // Inst #606 = PseudoCVT_D32_W
  { 607,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo58 },  // Inst #607 = PseudoCVT_D64_L
  { 608,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo140 },  // Inst #608 = PseudoCVT_D64_W
  { 609,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo58 },  // Inst #609 = PseudoCVT_S_L
  { 610,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo128 },  // Inst #610 = PseudoCVT_S_W
  { 611,	3,	1,	10,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo141 },  // Inst #611 = PseudoDMULT
  { 612,	3,	1,	10,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo141 },  // Inst #612 = PseudoDMULTu
  { 613,	3,	1,	11,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo141 },  // Inst #613 = PseudoDSDIV
  { 614,	3,	1,	11,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo141 },  // Inst #614 = PseudoDUDIV
  { 615,	3,	1,	19,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo81 },  // Inst #615 = PseudoLDC1
  { 616,	4,	1,	10,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo142 },  // Inst #616 = PseudoMADD
  { 617,	4,	1,	10,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo142 },  // Inst #617 = PseudoMADDU
  { 618,	4,	1,	10,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo142 },  // Inst #618 = PseudoMSUB
  { 619,	4,	1,	10,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo142 },  // Inst #619 = PseudoMSUBU
  { 620,	3,	1,	10,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo143 },  // Inst #620 = PseudoMULT
  { 621,	3,	1,	10,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo143 },  // Inst #621 = PseudoMULTu
  { 622,	4,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo144 },  // Inst #622 = PseudoPICK_PH
  { 623,	4,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo144 },  // Inst #623 = PseudoPICK_QB
  { 624,	3,	0,	23,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo81 },  // Inst #624 = PseudoSDC1
  { 625,	3,	1,	11,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo143 },  // Inst #625 = PseudoSDIV
  { 626,	3,	1,	11,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo143 },  // Inst #626 = PseudoUDIV
  { 627,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo135 },  // Inst #627 = RADDU_W_QB
  { 628,	2,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo145 },  // Inst #628 = RDDSP
  { 629,	2,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo146 },  // Inst #629 = RDHWR
  { 630,	2,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo147 },  // Inst #630 = RDHWR64
  { 631,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo148 },  // Inst #631 = REPLV_PH
  { 632,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo148 },  // Inst #632 = REPLV_QB
  { 633,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo149 },  // Inst #633 = REPL_PH
  { 634,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo149 },  // Inst #634 = REPL_QB
  { 635,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects)|(1<<MCID::ExtraSrcRegAllocReq), 0x1ULL, NULL, NULL, OperandInfo75 },  // Inst #635 = RET
  { 636,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo13 },  // Inst #636 = ROTR
  { 637,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #637 = ROTRV
  { 638,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #638 = ROTRV_MM
  { 639,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo13 },  // Inst #639 = ROTR_MM
  { 640,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #640 = ROUND_L_D64
  { 641,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo42 },  // Inst #641 = ROUND_L_S
  { 642,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo43 },  // Inst #642 = ROUND_W_D32
  { 643,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #643 = ROUND_W_D64
  { 644,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #644 = ROUND_W_S
  { 645,	1,	0,	20,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo5 },  // Inst #645 = RestoreIncSpF16
  { 646,	1,	0,	20,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList24, OperandInfo5 },  // Inst #646 = RestoreRaF16
  { 647,	0,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, 0 },  // Inst #647 = RetRA
  { 648,	0,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::ExtraSrcRegAllocReq), 0x0ULL, NULL, NULL, 0 },  // Inst #648 = RetRA16
  { 649,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #649 = SB
  { 650,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #650 = SB64
  { 651,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #651 = SB64_P8
  { 652,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #652 = SB_MM
  { 653,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #653 = SB_MM_P8
  { 654,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #654 = SB_P8
  { 655,	4,	1,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo150 },  // Inst #655 = SC
  { 656,	4,	1,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo151 },  // Inst #656 = SCD
  { 657,	4,	1,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo152 },  // Inst #657 = SCD_P8
  { 658,	4,	1,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo153 },  // Inst #658 = SC_P8
  { 659,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #659 = SD
  { 660,	3,	0,	23,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo81 },  // Inst #660 = SDC1
  { 661,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo82 },  // Inst #661 = SDC164
  { 662,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo83 },  // Inst #662 = SDC164_P8
  { 663,	2,	0,	11,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList11, OperandInfo47 },  // Inst #663 = SDIV
  { 664,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #664 = SDL
  { 665,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #665 = SDL_P8
  { 666,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #666 = SDR
  { 667,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #667 = SDR_P8
  { 668,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #668 = SDXC1
  { 669,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo86 },  // Inst #669 = SDXC164
  { 670,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo87 },  // Inst #670 = SDXC164_P8
  { 671,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #671 = SD_P8
  { 672,	2,	1,	24,	4,	0, 0x1ULL, NULL, NULL, OperandInfo47 },  // Inst #672 = SEB
  { 673,	2,	1,	24,	4,	0, 0x1ULL, NULL, NULL, OperandInfo53 },  // Inst #673 = SEB64
  { 674,	2,	1,	24,	4,	0, 0x1ULL, NULL, NULL, OperandInfo47 },  // Inst #674 = SEH
  { 675,	2,	1,	24,	4,	0, 0x1ULL, NULL, NULL, OperandInfo53 },  // Inst #675 = SEH64
  { 676,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #676 = SH
  { 677,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #677 = SH64
  { 678,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #678 = SH64_P8
  { 679,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo154 },  // Inst #679 = SHILO
  { 680,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo130 },  // Inst #680 = SHILOV
  { 681,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo155 },  // Inst #681 = SHLLV_PH
  { 682,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo155 },  // Inst #682 = SHLLV_QB
  { 683,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo155 },  // Inst #683 = SHLLV_S_PH
  { 684,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo12 },  // Inst #684 = SHLLV_S_W
  { 685,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo156 },  // Inst #685 = SHLL_PH
  { 686,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo156 },  // Inst #686 = SHLL_QB
  { 687,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo156 },  // Inst #687 = SHLL_S_PH
  { 688,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList23, OperandInfo157 },  // Inst #688 = SHLL_S_W
  { 689,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo155 },  // Inst #689 = SHRAV_PH
  { 690,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo155 },  // Inst #690 = SHRAV_QB
  { 691,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo155 },  // Inst #691 = SHRAV_R_PH
  { 692,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo155 },  // Inst #692 = SHRAV_R_QB
  { 693,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo12 },  // Inst #693 = SHRAV_R_W
  { 694,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo156 },  // Inst #694 = SHRA_PH
  { 695,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo156 },  // Inst #695 = SHRA_QB
  { 696,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo156 },  // Inst #696 = SHRA_R_PH
  { 697,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo156 },  // Inst #697 = SHRA_R_QB
  { 698,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo157 },  // Inst #698 = SHRA_R_W
  { 699,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo155 },  // Inst #699 = SHRLV_PH
  { 700,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo155 },  // Inst #700 = SHRLV_QB
  { 701,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo156 },  // Inst #701 = SHRL_PH
  { 702,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo156 },  // Inst #702 = SHRL_QB
  { 703,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #703 = SH_MM
  { 704,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #704 = SH_MM_P8
  { 705,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #705 = SH_P8
  { 706,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo13 },  // Inst #706 = SLL
  { 707,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo61 },  // Inst #707 = SLL64_32
  { 708,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo112 },  // Inst #708 = SLL64_64
  { 709,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #709 = SLLV
  { 710,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #710 = SLLV_MM
  { 711,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo13 },  // Inst #711 = SLL_MM
  { 712,	3,	1,	25,	4,	0, 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #712 = SLT
  { 713,	3,	1,	25,	4,	0, 0x1ULL, NULL, NULL, OperandInfo158 },  // Inst #713 = SLT64
  { 714,	3,	1,	25,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #714 = SLT_MM
  { 715,	3,	1,	25,	4,	0, 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #715 = SLTi
  { 716,	3,	1,	25,	4,	0, 0x2ULL, NULL, NULL, OperandInfo159 },  // Inst #716 = SLTi64
  { 717,	3,	1,	25,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #717 = SLTi_MM
  { 718,	3,	1,	25,	4,	0, 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #718 = SLTiu
  { 719,	3,	1,	25,	4,	0, 0x2ULL, NULL, NULL, OperandInfo159 },  // Inst #719 = SLTiu64
  { 720,	3,	1,	25,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #720 = SLTiu_MM
  { 721,	3,	1,	25,	4,	0, 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #721 = SLTu
  { 722,	3,	1,	25,	4,	0, 0x1ULL, NULL, NULL, OperandInfo158 },  // Inst #722 = SLTu64
  { 723,	3,	1,	25,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #723 = SLTu_MM
  { 724,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo13 },  // Inst #724 = SRA
  { 725,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #725 = SRAV
  { 726,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #726 = SRAV_MM
  { 727,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo13 },  // Inst #727 = SRA_MM
  { 728,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo13 },  // Inst #728 = SRL
  { 729,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #729 = SRLV
  { 730,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #730 = SRLV_MM
  { 731,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo13 },  // Inst #731 = SRL_MM
  { 732,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo88 },  // Inst #732 = STORE_AC128
  { 733,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo89 },  // Inst #733 = STORE_AC128_P8
  { 734,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo90 },  // Inst #734 = STORE_AC64
  { 735,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo91 },  // Inst #735 = STORE_AC64_P8
  { 736,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo92 },  // Inst #736 = STORE_AC_DSP
  { 737,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo93 },  // Inst #737 = STORE_AC_DSP_P8
  { 738,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo94 },  // Inst #738 = STORE_CCOND_DSP
  { 739,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo95 },  // Inst #739 = STORE_CCOND_DSP_P8
  { 740,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #740 = SUB
  { 741,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #741 = SUBQH_PH
  { 742,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #742 = SUBQH_R_PH
  { 743,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo12 },  // Inst #743 = SUBQH_R_W
  { 744,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo12 },  // Inst #744 = SUBQH_W
  { 745,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #745 = SUBQ_PH
  { 746,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #746 = SUBQ_S_PH
  { 747,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #747 = SUBQ_S_W
  { 748,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #748 = SUBUH_QB
  { 749,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo11 },  // Inst #749 = SUBUH_R_QB
  { 750,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #750 = SUBU_PH
  { 751,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #751 = SUBU_QB
  { 752,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #752 = SUBU_S_PH
  { 753,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #753 = SUBU_S_QB
  { 754,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #754 = SUB_MM
  { 755,	3,	1,	1,	4,	0|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #755 = SUBu
  { 756,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #756 = SUBu_MM
  { 757,	3,	0,	23,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo40 },  // Inst #757 = SUXC1
  { 758,	3,	0,	23,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo86 },  // Inst #758 = SUXC164
  { 759,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #759 = SW
  { 760,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #760 = SW64
  { 761,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #761 = SW64_P8
  { 762,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo98 },  // Inst #762 = SWC1
  { 763,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo99 },  // Inst #763 = SWC1_P8
  { 764,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #764 = SWL
  { 765,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #765 = SWL64
  { 766,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #766 = SWL64_P8
  { 767,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #767 = SWL_P8
  { 768,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #768 = SWR
  { 769,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #769 = SWR64
  { 770,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo79 },  // Inst #770 = SWR64_P8
  { 771,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #771 = SWR_P8
  { 772,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo102 },  // Inst #772 = SWXC1
  { 773,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo103 },  // Inst #773 = SWXC1_P8
  { 774,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #774 = SW_MM
  { 775,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #775 = SW_MM_P8
  { 776,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo80 },  // Inst #776 = SW_P8
  { 777,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo2 },  // Inst #777 = SYNC
  { 778,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo5 },  // Inst #778 = SYSCALL
  { 779,	1,	0,	26,	2,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo5 },  // Inst #779 = SaveDecSpF16
  { 780,	1,	0,	26,	2,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList25, ImplicitList3, OperandInfo5 },  // Inst #780 = SaveRaF16
  { 781,	4,	0,	26,	4,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #781 = SbRxRyOffMemX16
  { 782,	4,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo160 },  // Inst #782 = SelBeqZ
  { 783,	4,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo160 },  // Inst #783 = SelBneZ
  { 784,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo161 },  // Inst #784 = SelTBteqZCmp
  { 785,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo162 },  // Inst #785 = SelTBteqZCmpi
  { 786,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo161 },  // Inst #786 = SelTBteqZSlt
  { 787,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo162 },  // Inst #787 = SelTBteqZSlti
  { 788,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo162 },  // Inst #788 = SelTBteqZSltiu
  { 789,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo161 },  // Inst #789 = SelTBteqZSltu
  { 790,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo161 },  // Inst #790 = SelTBtneZCmp
  { 791,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo162 },  // Inst #791 = SelTBtneZCmpi
  { 792,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo161 },  // Inst #792 = SelTBtneZSlt
  { 793,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo162 },  // Inst #793 = SelTBtneZSlti
  { 794,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo162 },  // Inst #794 = SelTBtneZSltiu
  { 795,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo161 },  // Inst #795 = SelTBtneZSltu
  { 796,	4,	0,	26,	4,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #796 = ShRxRyOffMemX16
  { 797,	3,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo163 },  // Inst #797 = SllX16
  { 798,	3,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #798 = SllvRxRy16
  { 799,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #799 = SltCCRxRy16
  { 800,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo52 },  // Inst #800 = SltRxRy16
  { 801,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo163 },  // Inst #801 = SltiCCRxImmX16
  { 802,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo25 },  // Inst #802 = SltiRxImm16
  { 803,	2,	0,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo25 },  // Inst #803 = SltiRxImmX16
  { 804,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo163 },  // Inst #804 = SltiuCCRxImmX16
  { 805,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo25 },  // Inst #805 = SltiuRxImm16
  { 806,	2,	0,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo25 },  // Inst #806 = SltiuRxImmX16
  { 807,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #807 = SltuCCRxRy16
  { 808,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo52 },  // Inst #808 = SltuRxRy16
  { 809,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo28 },  // Inst #809 = SltuRxRyRz16
  { 810,	3,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo163 },  // Inst #810 = SraX16
  { 811,	3,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #811 = SravRxRy16
  { 812,	3,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo163 },  // Inst #812 = SrlX16
  { 813,	3,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #813 = SrlvRxRy16
  { 814,	3,	1,	4,	2,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #814 = SubuRxRyRz16
  { 815,	4,	0,	26,	4,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #815 = SwRxRyOffMemX16
  { 816,	3,	0,	26,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo105 },  // Inst #816 = SwRxSpImmX16
  { 817,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::ExtraSrcRegAllocReq), 0x3ULL, NULL, ImplicitList4, OperandInfo5 },  // Inst #817 = TAILCALL
  { 818,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::ExtraSrcRegAllocReq), 0x1ULL, NULL, NULL, OperandInfo74 },  // Inst #818 = TAILCALL64_R
  { 819,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::ExtraSrcRegAllocReq), 0x1ULL, NULL, NULL, OperandInfo75 },  // Inst #819 = TAILCALL_R
  { 820,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #820 = TEQ
  { 821,	0,	0,	0,	4,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, 0 },  // Inst #821 = TRAP
  { 822,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo41 },  // Inst #822 = TRUNC_L_D64
  { 823,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo42 },  // Inst #823 = TRUNC_L_S
  { 824,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo43 },  // Inst #824 = TRUNC_W_D32
  { 825,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo44 },  // Inst #825 = TRUNC_W_D64
  { 826,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo45 },  // Inst #826 = TRUNC_W_S
  { 827,	2,	0,	11,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList11, OperandInfo47 },  // Inst #827 = UDIV
  { 828,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo145 },  // Inst #828 = WRDSP
  { 829,	2,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo47 },  // Inst #829 = WSBH
  { 830,	3,	1,	3,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #830 = XOR
  { 831,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo15 },  // Inst #831 = XOR64
  { 832,	3,	1,	4,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo10 },  // Inst #832 = XOR_MM
  { 833,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #833 = XORi
  { 834,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo16 },  // Inst #834 = XORi64
  { 835,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo13 },  // Inst #835 = XORi_MM
  { 836,	3,	1,	4,	2,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #836 = XorRxRxRy16
};

extern const char MipsInstrNameData[] = {
  /* 0 */ 'P', 's', 'e', 'u', 'd', 'o', 'L', 'D', 'C', '1', 0,
  /* 11 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'D', 'C', '1', 0,
  /* 22 */ 'C', 'F', 'C', '1', 0,
  /* 27 */ 'D', 'M', 'F', 'C', '1', 0,
  /* 33 */ 'C', 'T', 'C', '1', 0,
  /* 38 */ 'D', 'M', 'T', 'C', '1', 0,
  /* 44 */ 'L', 'W', 'C', '1', 0,
  /* 49 */ 'S', 'W', 'C', '1', 0,
  /* 54 */ 'L', 'D', 'X', 'C', '1', 0,
  /* 60 */ 'S', 'D', 'X', 'C', '1', 0,
  /* 66 */ 'L', 'U', 'X', 'C', '1', 0,
  /* 72 */ 'S', 'U', 'X', 'C', '1', 0,
  /* 78 */ 'L', 'W', 'X', 'C', '1', 0,
  /* 84 */ 'S', 'W', 'X', 'C', '1', 0,
  /* 90 */ 'D', 'S', 'R', 'A', '3', '2', 0,
  /* 97 */ 'F', 'S', 'U', 'B', '_', 'D', '3', '2', 0,
  /* 106 */ 'N', 'M', 'S', 'U', 'B', '_', 'D', '3', '2', 0,
  /* 116 */ 'F', 'A', 'D', 'D', '_', 'D', '3', '2', 0,
  /* 125 */ 'N', 'M', 'A', 'D', 'D', '_', 'D', '3', '2', 0,
  /* 135 */ 'C', '_', 'N', 'G', 'E', '_', 'D', '3', '2', 0,
  /* 145 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 156 */ 'C', '_', 'O', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 166 */ 'C', '_', 'U', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 176 */ 'C', '_', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 185 */ 'C', '_', 'S', 'F', '_', 'D', '3', '2', 0,
  /* 194 */ 'M', 'O', 'V', 'F', '_', 'D', '3', '2', 0,
  /* 203 */ 'C', '_', 'F', '_', 'D', '3', '2', 0,
  /* 211 */ 'F', 'N', 'E', 'G', '_', 'D', '3', '2', 0,
  /* 220 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'D', '3', '2', 0,
  /* 231 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'D', '3', '2', 0,
  /* 242 */ 'C', '_', 'N', 'G', 'L', '_', 'D', '3', '2', 0,
  /* 252 */ 'F', 'M', 'U', 'L', '_', 'D', '3', '2', 0,
  /* 261 */ 'C', '_', 'U', 'N', '_', 'D', '3', '2', 0,
  /* 270 */ 'F', 'C', 'M', 'P', '_', 'D', '3', '2', 0,
  /* 279 */ 'C', '_', 'S', 'E', 'Q', '_', 'D', '3', '2', 0,
  /* 289 */ 'C', '_', 'U', 'E', 'Q', '_', 'D', '3', '2', 0,
  /* 299 */ 'C', '_', 'E', 'Q', '_', 'D', '3', '2', 0,
  /* 308 */ 'F', 'A', 'B', 'S', '_', 'D', '3', '2', 0,
  /* 317 */ 'C', 'V', 'T', '_', 'S', '_', 'D', '3', '2', 0,
  /* 327 */ 'C', '_', 'N', 'G', 'T', '_', 'D', '3', '2', 0,
  /* 337 */ 'C', '_', 'O', 'L', 'T', '_', 'D', '3', '2', 0,
  /* 347 */ 'C', '_', 'U', 'L', 'T', '_', 'D', '3', '2', 0,
  /* 357 */ 'C', '_', 'L', 'T', '_', 'D', '3', '2', 0,
  /* 366 */ 'F', 'S', 'Q', 'R', 'T', '_', 'D', '3', '2', 0,
  /* 376 */ 'M', 'O', 'V', 'T', '_', 'D', '3', '2', 0,
  /* 385 */ 'F', 'D', 'I', 'V', '_', 'D', '3', '2', 0,
  /* 394 */ 'F', 'M', 'O', 'V', '_', 'D', '3', '2', 0,
  /* 403 */ 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'D', '3', '2', 0,
  /* 415 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'D', '3', '2', 0,
  /* 427 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'D', '3', '2', 0,
  /* 438 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'D', '3', '2', 0,
  /* 450 */ 'C', 'V', 'T', '_', 'W', '_', 'D', '3', '2', 0,
  /* 460 */ 'B', 'P', 'O', 'S', 'G', 'E', '3', '2', 0,
  /* 469 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 489 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 509 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 530 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 550 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 566 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 586 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 606 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 625 */ 'D', 'S', 'L', 'L', '3', '2', 0,
  /* 632 */ 'D', 'S', 'R', 'L', '3', '2', 0,
  /* 639 */ 'F', 'C', 'M', 'P', '_', 'S', '3', '2', 0,
  /* 648 */ 'D', 'S', 'L', 'L', '6', '4', '_', '3', '2', 0,
  /* 658 */ 'M', 'I', 'P', 'S', 'e', 'h', '_', 'r', 'e', 't', 'u', 'r', 'n', '3', '2', 0,
  /* 674 */ 'L', 'w', 'C', 'o', 'n', 's', 't', 'a', 'n', 't', '3', '2', 0,
  /* 687 */ 'L', 'D', 'C', '1', '6', '4', 0,
  /* 694 */ 'S', 'D', 'C', '1', '6', '4', 0,
  /* 701 */ 'L', 'D', 'X', 'C', '1', '6', '4', 0,
  /* 709 */ 'S', 'D', 'X', 'C', '1', '6', '4', 0,
  /* 717 */ 'L', 'U', 'X', 'C', '1', '6', '4', 0,
  /* 725 */ 'S', 'U', 'X', 'C', '1', '6', '4', 0,
  /* 733 */ 'S', 'E', 'B', '6', '4', 0,
  /* 739 */ 'L', 'B', '6', '4', 0,
  /* 744 */ 'S', 'B', '6', '4', 0,
  /* 749 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', '6', '4', 0,
  /* 759 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', '6', '4', 0,
  /* 770 */ 'A', 'N', 'D', '6', '4', 0,
  /* 776 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'D', '6', '4', 0,
  /* 789 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'D', '6', '4', 0,
  /* 802 */ 'F', 'S', 'U', 'B', '_', 'D', '6', '4', 0,
  /* 811 */ 'N', 'M', 'S', 'U', 'B', '_', 'D', '6', '4', 0,
  /* 821 */ 'F', 'A', 'D', 'D', '_', 'D', '6', '4', 0,
  /* 830 */ 'N', 'M', 'A', 'D', 'D', '_', 'D', '6', '4', 0,
  /* 840 */ 'C', '_', 'N', 'G', 'E', '_', 'D', '6', '4', 0,
  /* 850 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 861 */ 'C', '_', 'O', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 871 */ 'C', '_', 'U', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 881 */ 'C', '_', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 890 */ 'C', '_', 'S', 'F', '_', 'D', '6', '4', 0,
  /* 899 */ 'M', 'O', 'V', 'F', '_', 'D', '6', '4', 0,
  /* 908 */ 'C', '_', 'F', '_', 'D', '6', '4', 0,
  /* 916 */ 'F', 'N', 'E', 'G', '_', 'D', '6', '4', 0,
  /* 925 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'D', '6', '4', 0,
  /* 936 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'D', '6', '4', 0,
  /* 947 */ 'C', '_', 'N', 'G', 'L', '_', 'D', '6', '4', 0,
  /* 957 */ 'F', 'M', 'U', 'L', '_', 'D', '6', '4', 0,
  /* 966 */ 'T', 'R', 'U', 'N', 'C', '_', 'L', '_', 'D', '6', '4', 0,
  /* 978 */ 'R', 'O', 'U', 'N', 'D', '_', 'L', '_', 'D', '6', '4', 0,
  /* 990 */ 'C', 'E', 'I', 'L', '_', 'L', '_', 'D', '6', '4', 0,
  /* 1001 */ 'F', 'L', 'O', 'O', 'R', '_', 'L', '_', 'D', '6', '4', 0,
  /* 1013 */ 'C', 'V', 'T', '_', 'L', '_', 'D', '6', '4', 0,
  /* 1023 */ 'C', '_', 'U', 'N', '_', 'D', '6', '4', 0,
  /* 1032 */ 'F', 'C', 'M', 'P', '_', 'D', '6', '4', 0,
  /* 1041 */ 'C', '_', 'S', 'E', 'Q', '_', 'D', '6', '4', 0,
  /* 1051 */ 'C', '_', 'U', 'E', 'Q', '_', 'D', '6', '4', 0,
  /* 1061 */ 'C', '_', 'E', 'Q', '_', 'D', '6', '4', 0,
  /* 1070 */ 'F', 'A', 'B', 'S', '_', 'D', '6', '4', 0,
  /* 1079 */ 'C', 'V', 'T', '_', 'S', '_', 'D', '6', '4', 0,
  /* 1089 */ 'C', '_', 'N', 'G', 'T', '_', 'D', '6', '4', 0,
  /* 1099 */ 'C', '_', 'O', 'L', 'T', '_', 'D', '6', '4', 0,
  /* 1109 */ 'C', '_', 'U', 'L', 'T', '_', 'D', '6', '4', 0,
  /* 1119 */ 'C', '_', 'L', 'T', '_', 'D', '6', '4', 0,
  /* 1128 */ 'F', 'S', 'Q', 'R', 'T', '_', 'D', '6', '4', 0,
  /* 1138 */ 'M', 'O', 'V', 'T', '_', 'D', '6', '4', 0,
  /* 1147 */ 'F', 'D', 'I', 'V', '_', 'D', '6', '4', 0,
  /* 1156 */ 'F', 'M', 'O', 'V', '_', 'D', '6', '4', 0,
  /* 1165 */ 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1177 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1189 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1200 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1212 */ 'C', 'V', 'T', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1222 */ 'B', 'N', 'E', '6', '4', 0,
  /* 1228 */ 'B', 'u', 'i', 'l', 'd', 'P', 'a', 'i', 'r', 'F', '6', '4', 0,
  /* 1241 */ 'E', 'x', 't', 'r', 'a', 'c', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'F', '6', '4', 0,
  /* 1259 */ 'S', 'E', 'H', '6', '4', 0,
  /* 1265 */ 'L', 'H', '6', '4', 0,
  /* 1270 */ 'S', 'H', '6', '4', 0,
  /* 1275 */ 'M', 'F', 'H', 'I', '6', '4', 0,
  /* 1282 */ 'M', 'T', 'H', 'I', '6', '4', 0,
  /* 1289 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'I', '6', '4', 0,
  /* 1302 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'I', '6', '4', 0,
  /* 1315 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 1335 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 1355 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 1376 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 1396 */ 'M', 'O', 'V', 'F', '_', 'I', '6', '4', 0,
  /* 1405 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'I', '6', '4', 0,
  /* 1416 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'I', '6', '4', 0,
  /* 1427 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 1443 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 1463 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 1483 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 1502 */ 'M', 'O', 'V', 'T', '_', 'I', '6', '4', 0,
  /* 1511 */ 'L', 'W', 'L', '6', '4', 0,
  /* 1517 */ 'S', 'W', 'L', '6', '4', 0,
  /* 1523 */ 'M', 'F', 'L', 'O', '6', '4', 0,
  /* 1530 */ 'M', 'T', 'L', 'O', '6', '4', 0,
  /* 1537 */ 'D', 'M', 'F', 'C', '0', '_', '3', 'O', 'P', '6', '4', 0,
  /* 1549 */ 'D', 'M', 'T', 'C', '0', '_', '3', 'O', 'P', '6', '4', 0,
  /* 1561 */ 'D', 'M', 'F', 'C', '2', '_', '3', 'O', 'P', '6', '4', 0,
  /* 1573 */ 'D', 'M', 'T', 'C', '2', '_', '3', 'O', 'P', '6', '4', 0,
  /* 1585 */ 'B', 'E', 'Q', '6', '4', 0,
  /* 1591 */ 'J', 'R', '6', '4', 0,
  /* 1596 */ 'J', 'A', 'L', 'R', '6', '4', 0,
  /* 1603 */ 'N', 'O', 'R', '6', '4', 0,
  /* 1609 */ 'X', 'O', 'R', '6', '4', 0,
  /* 1615 */ 'R', 'D', 'H', 'W', 'R', '6', '4', 0,
  /* 1623 */ 'L', 'W', 'R', '6', '4', 0,
  /* 1629 */ 'S', 'W', 'R', '6', '4', 0,
  /* 1635 */ 'S', 'L', 'T', '6', '4', 0,
  /* 1641 */ 'L', 'W', '6', '4', 0,
  /* 1646 */ 'S', 'W', '6', '4', 0,
  /* 1651 */ 'B', 'G', 'E', 'Z', '6', '4', 0,
  /* 1658 */ 'B', 'L', 'E', 'Z', '6', '4', 0,
  /* 1665 */ 'B', 'G', 'T', 'Z', '6', '4', 0,
  /* 1672 */ 'B', 'L', 'T', 'Z', '6', '4', 0,
  /* 1679 */ 'S', 'L', 'L', '6', '4', '_', '6', '4', 0,
  /* 1688 */ 'A', 'N', 'D', 'i', '6', '4', 0,
  /* 1695 */ 'X', 'O', 'R', 'i', '6', '4', 0,
  /* 1702 */ 'S', 'L', 'T', 'i', '6', '4', 0,
  /* 1709 */ 'L', 'U', 'i', '6', '4', 0,
  /* 1715 */ 'M', 'I', 'P', 'S', 'e', 'h', '_', 'r', 'e', 't', 'u', 'r', 'n', '6', '4', 0,
  /* 1731 */ 'L', 'B', 'u', '6', '4', 0,
  /* 1737 */ 'L', 'H', 'u', '6', '4', 0,
  /* 1743 */ 'S', 'L', 'T', 'u', '6', '4', 0,
  /* 1750 */ 'L', 'E', 'A', '_', 'A', 'D', 'D', 'i', 'u', '6', '4', 0,
  /* 1762 */ 'S', 'L', 'T', 'i', 'u', '6', '4', 0,
  /* 1770 */ 'M', 'o', 'v', 'e', 'R', '3', '2', '1', '6', 0,
  /* 1780 */ 'R', 'e', 't', 'R', 'A', '1', '6', 0,
  /* 1788 */ 'R', 'e', 's', 't', 'o', 'r', 'e', 'R', 'a', 'F', '1', '6', 0,
  /* 1801 */ 'S', 'a', 'v', 'e', 'R', 'a', 'F', '1', '6', 0,
  /* 1811 */ 'S', 'a', 'v', 'e', 'D', 'e', 'c', 'S', 'p', 'F', '1', '6', 0,
  /* 1824 */ 'R', 'e', 's', 't', 'o', 'r', 'e', 'I', 'n', 'c', 'S', 'p', 'F', '1', '6', 0,
  /* 1840 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', 0,
  /* 1860 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', 0,
  /* 1880 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 1901 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 1921 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 1937 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 1957 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 1977 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 1996 */ 'M', 'o', 'v', 'e', '3', '2', 'R', '1', '6', 0,
  /* 2006 */ 'S', 'r', 'a', 'X', '1', '6', 0,
  /* 2013 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'C', 'm', 'p', 'i', 'X', '1', '6', 0,
  /* 2028 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'C', 'm', 'p', 'i', 'X', '1', '6', 0,
  /* 2043 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'i', 'X', '1', '6', 0,
  /* 2058 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'i', 'X', '1', '6', 0,
  /* 2073 */ 'S', 'l', 'l', 'X', '1', '6', 0,
  /* 2080 */ 'S', 'r', 'l', 'X', '1', '6', 0,
  /* 2087 */ 'L', 'b', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2103 */ 'S', 'b', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2119 */ 'L', 'h', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2135 */ 'S', 'h', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2151 */ 'L', 'b', 'u', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2168 */ 'L', 'h', 'u', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2185 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2204 */ 'L', 'w', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2220 */ 'S', 'w', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2236 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'P', 'c', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2252 */ 'A', 'd', 'd', 'i', 'u', 'S', 'p', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2266 */ 'L', 'w', 'R', 'x', 'S', 'p', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2279 */ 'S', 'w', 'R', 'x', 'S', 'p', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2292 */ 'S', 'l', 't', 'i', 'C', 'C', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2307 */ 'S', 'l', 't', 'i', 'u', 'C', 'C', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2323 */ 'L', 'i', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2334 */ 'C', 'm', 'p', 'i', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2347 */ 'S', 'l', 't', 'i', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2360 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2374 */ 'S', 'l', 't', 'i', 'u', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2388 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2404 */ 'B', 'n', 'e', 'z', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2417 */ 'B', 'e', 'q', 'z', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2430 */ 'B', 'i', 'm', 'm', 'X', '1', '6', 0,
  /* 2438 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'C', 'm', 'p', 'X', '1', '6', 0,
  /* 2452 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'C', 'm', 'p', 'X', '1', '6', 0,
  /* 2466 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'X', '1', '6', 0,
  /* 2480 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'X', '1', '6', 0,
  /* 2494 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'i', 'u', 'X', '1', '6', 0,
  /* 2510 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'i', 'u', 'X', '1', '6', 0,
  /* 2526 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'u', 'X', '1', '6', 0,
  /* 2541 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'u', 'X', '1', '6', 0,
  /* 2556 */ 'B', 't', 'n', 'e', 'z', 'X', '1', '6', 0,
  /* 2565 */ 'B', 't', 'e', 'q', 'z', 'X', '1', '6', 0,
  /* 2574 */ 'J', 'r', 'c', 'R', 'a', '1', '6', 0,
  /* 2582 */ 'J', 'r', 'R', 'a', '1', '6', 0,
  /* 2589 */ 'J', 'u', 'm', 'p', 'L', 'i', 'n', 'k', 'R', 'e', 'g', '1', '6', 0,
  /* 2603 */ 'M', 'f', 'h', 'i', '1', '6', 0,
  /* 2610 */ 'B', 'r', 'e', 'a', 'k', '1', '6', 0,
  /* 2618 */ 'J', 'a', 'l', '1', '6', 0,
  /* 2624 */ 'A', 'd', 'd', 'i', 'u', 'S', 'p', 'I', 'm', 'm', '1', '6', 0,
  /* 2637 */ 'L', 'i', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2647 */ 'C', 'm', 'p', 'i', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2659 */ 'S', 'l', 't', 'i', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2671 */ 'S', 'l', 't', 'i', 'u', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2684 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2699 */ 'B', 'n', 'e', 'z', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2711 */ 'B', 'e', 'q', 'z', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2723 */ 'M', 'f', 'l', 'o', '1', '6', 0,
  /* 2730 */ 'J', 'r', 'c', 'R', 'x', '1', '6', 0,
  /* 2738 */ 'S', 'l', 't', 'C', 'C', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2750 */ 'S', 'l', 't', 'u', 'C', 'C', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2763 */ 'N', 'e', 'g', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2773 */ 'C', 'm', 'p', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2783 */ 'S', 'l', 't', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2793 */ 'M', 'u', 'l', 't', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2804 */ 'N', 'o', 't', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2814 */ 'S', 'l', 't', 'u', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2825 */ 'M', 'u', 'l', 't', 'u', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2837 */ 'D', 'i', 'v', 'u', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2848 */ 'S', 'r', 'a', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2859 */ 'D', 'i', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2869 */ 'S', 'l', 'l', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2880 */ 'S', 'r', 'l', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2891 */ 'A', 'n', 'd', 'R', 'x', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2903 */ 'O', 'r', 'R', 'x', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2914 */ 'X', 'o', 'r', 'R', 'x', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2926 */ 'M', 'u', 'l', 't', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 2939 */ 'S', 'u', 'b', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 2952 */ 'A', 'd', 'd', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 2965 */ 'S', 'l', 't', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 2978 */ 'M', 'u', 'l', 't', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 2992 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', '1', '2', '8', 0,
  /* 3003 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', '1', '2', '8', 0,
  /* 3015 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', 0,
  /* 3034 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', 0,
  /* 3053 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 3073 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 3092 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 3107 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 3126 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', 0,
  /* 3145 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', 0,
  /* 3163 */ 'L', 'W', 'C', '1', '_', 'P', '8', 0,
  /* 3171 */ 'S', 'W', 'C', '1', '_', 'P', '8', 0,
  /* 3179 */ 'L', 'W', 'X', 'C', '1', '_', 'P', '8', 0,
  /* 3188 */ 'S', 'W', 'X', 'C', '1', '_', 'P', '8', 0,
  /* 3197 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3220 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3243 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3267 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3290 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3309 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3332 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3355 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', '_', 'P', '8', 0,
  /* 3377 */ 'L', 'D', 'C', '1', '6', '4', '_', 'P', '8', 0,
  /* 3387 */ 'S', 'D', 'C', '1', '6', '4', '_', 'P', '8', 0,
  /* 3397 */ 'L', 'D', 'X', 'C', '1', '6', '4', '_', 'P', '8', 0,
  /* 3408 */ 'S', 'D', 'X', 'C', '1', '6', '4', '_', 'P', '8', 0,
  /* 3419 */ 'L', 'B', '6', '4', '_', 'P', '8', 0,
  /* 3427 */ 'S', 'B', '6', '4', '_', 'P', '8', 0,
  /* 3435 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', '6', '4', '_', 'P', '8', 0,
  /* 3448 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', '6', '4', '_', 'P', '8', 0,
  /* 3462 */ 'L', 'H', '6', '4', '_', 'P', '8', 0,
  /* 3470 */ 'S', 'H', '6', '4', '_', 'P', '8', 0,
  /* 3478 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3501 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3524 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3548 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3571 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3590 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3613 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3636 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', '_', 'P', '8', 0,
  /* 3658 */ 'L', 'W', 'L', '6', '4', '_', 'P', '8', 0,
  /* 3667 */ 'S', 'W', 'L', '6', '4', '_', 'P', '8', 0,
  /* 3676 */ 'L', 'W', 'R', '6', '4', '_', 'P', '8', 0,
  /* 3685 */ 'S', 'W', 'R', '6', '4', '_', 'P', '8', 0,
  /* 3694 */ 'L', 'W', '6', '4', '_', 'P', '8', 0,
  /* 3702 */ 'S', 'W', '6', '4', '_', 'P', '8', 0,
  /* 3710 */ 'L', 'B', 'u', '6', '4', '_', 'P', '8', 0,
  /* 3719 */ 'L', 'H', 'u', '6', '4', '_', 'P', '8', 0,
  /* 3728 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3751 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3774 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3798 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3821 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3840 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3863 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3886 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', '_', 'P', '8', 0,
  /* 3908 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', '1', '2', '8', '_', 'P', '8', 0,
  /* 3922 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', '1', '2', '8', '_', 'P', '8', 0,
  /* 3937 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', '_', 'P', '8', 0,
  /* 3959 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', '_', 'P', '8', 0,
  /* 3981 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', '_', 'P', '8', 0,
  /* 4004 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', '_', 'P', '8', 0,
  /* 4026 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', '_', 'P', '8', 0,
  /* 4044 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', '_', 'P', '8', 0,
  /* 4066 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', '_', 'P', '8', 0,
  /* 4088 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', '_', 'P', '8', 0,
  /* 4109 */ 'L', 'B', '_', 'P', '8', 0,
  /* 4115 */ 'S', 'B', '_', 'P', '8', 0,
  /* 4121 */ 'S', 'C', '_', 'P', '8', 0,
  /* 4127 */ 'S', 'C', 'D', '_', 'P', '8', 0,
  /* 4134 */ 'L', 'L', 'D', '_', 'P', '8', 0,
  /* 4141 */ 'S', 'D', '_', 'P', '8', 0,
  /* 4147 */ 'L', 'H', '_', 'P', '8', 0,
  /* 4153 */ 'S', 'H', '_', 'P', '8', 0,
  /* 4159 */ 'L', 'D', 'L', '_', 'P', '8', 0,
  /* 4166 */ 'S', 'D', 'L', '_', 'P', '8', 0,
  /* 4173 */ 'L', 'L', '_', 'P', '8', 0,
  /* 4179 */ 'L', 'W', 'L', '_', 'P', '8', 0,
  /* 4186 */ 'S', 'W', 'L', '_', 'P', '8', 0,
  /* 4193 */ 'L', 'B', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4202 */ 'S', 'B', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4211 */ 'L', 'H', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4220 */ 'S', 'H', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4229 */ 'L', 'W', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4238 */ 'S', 'W', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4247 */ 'L', 'B', 'u', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4257 */ 'L', 'H', 'u', '_', 'M', 'M', '_', 'P', '8', 0,
  /* 4267 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', '_', 'D', 'S', 'P', '_', 'P', '8', 0,
  /* 4282 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', '_', 'D', 'S', 'P', '_', 'P', '8', 0,
  /* 4298 */ 'L', 'O', 'A', 'D', '_', 'C', 'C', 'O', 'N', 'D', '_', 'D', 'S', 'P', '_', 'P', '8', 0,
  /* 4316 */ 'S', 'T', 'O', 'R', 'E', '_', 'C', 'C', 'O', 'N', 'D', '_', 'D', 'S', 'P', '_', 'P', '8', 0,
  /* 4335 */ 'L', 'D', 'R', '_', 'P', '8', 0,
  /* 4342 */ 'S', 'D', 'R', '_', 'P', '8', 0,
  /* 4349 */ 'L', 'W', 'R', '_', 'P', '8', 0,
  /* 4356 */ 'S', 'W', 'R', '_', 'P', '8', 0,
  /* 4363 */ 'L', 'W', '_', 'P', '8', 0,
  /* 4369 */ 'S', 'W', '_', 'P', '8', 0,
  /* 4375 */ 'L', 'B', 'u', '_', 'P', '8', 0,
  /* 4382 */ 'L', 'H', 'u', '_', 'P', '8', 0,
  /* 4389 */ 'L', 'W', 'u', '_', 'P', '8', 0,
  /* 4396 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 'A', 0,
  /* 4411 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 'A', 0,
  /* 4427 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 'A', 0,
  /* 4442 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 'A', 0,
  /* 4458 */ 'D', 'S', 'R', 'A', 0,
  /* 4463 */ 'R', 'e', 't', 'R', 'A', 0,
  /* 4469 */ 'S', 'E', 'B', 0,
  /* 4473 */ 'L', 'B', 0,
  /* 4476 */ 'S', 'H', 'R', 'A', '_', 'Q', 'B', 0,
  /* 4484 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'L', 'E', '_', 'Q', 'B', 0,
  /* 4497 */ 'C', 'M', 'P', 'G', 'U', '_', 'L', 'E', '_', 'Q', 'B', 0,
  /* 4509 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', 'U', '_', 'L', 'E', '_', 'Q', 'B', 0,
  /* 4526 */ 'S', 'U', 'B', 'U', 'H', '_', 'Q', 'B', 0,
  /* 4535 */ 'A', 'D', 'D', 'U', 'H', '_', 'Q', 'B', 0,
  /* 4544 */ 'P', 's', 'e', 'u', 'd', 'o', 'P', 'I', 'C', 'K', '_', 'Q', 'B', 0,
  /* 4558 */ 'S', 'H', 'L', 'L', '_', 'Q', 'B', 0,
  /* 4566 */ 'R', 'E', 'P', 'L', '_', 'Q', 'B', 0,
  /* 4574 */ 'S', 'H', 'R', 'L', '_', 'Q', 'B', 0,
  /* 4582 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'E', 'Q', '_', 'Q', 'B', 0,
  /* 4595 */ 'C', 'M', 'P', 'G', 'U', '_', 'E', 'Q', '_', 'Q', 'B', 0,
  /* 4607 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', 'U', '_', 'E', 'Q', '_', 'Q', 'B', 0,
  /* 4624 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'Q', 'B', 0,
  /* 4634 */ 'S', 'U', 'B', 'U', 'H', '_', 'R', '_', 'Q', 'B', 0,
  /* 4645 */ 'A', 'D', 'D', 'U', 'H', '_', 'R', '_', 'Q', 'B', 0,
  /* 4656 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'Q', 'B', 0,
  /* 4667 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'Q', 'B', 0,
  /* 4677 */ 'S', 'U', 'B', 'U', '_', 'S', '_', 'Q', 'B', 0,
  /* 4687 */ 'A', 'D', 'D', 'U', '_', 'S', '_', 'Q', 'B', 0,
  /* 4697 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'L', 'T', '_', 'Q', 'B', 0,
  /* 4710 */ 'C', 'M', 'P', 'G', 'U', '_', 'L', 'T', '_', 'Q', 'B', 0,
  /* 4722 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', 'U', '_', 'L', 'T', '_', 'Q', 'B', 0,
  /* 4739 */ 'S', 'U', 'B', 'U', '_', 'Q', 'B', 0,
  /* 4747 */ 'A', 'D', 'D', 'U', '_', 'Q', 'B', 0,
  /* 4755 */ 'S', 'H', 'R', 'A', 'V', '_', 'Q', 'B', 0,
  /* 4764 */ 'S', 'H', 'L', 'L', 'V', '_', 'Q', 'B', 0,
  /* 4773 */ 'R', 'E', 'P', 'L', 'V', '_', 'Q', 'B', 0,
  /* 4782 */ 'S', 'H', 'R', 'L', 'V', '_', 'Q', 'B', 0,
  /* 4791 */ 'R', 'A', 'D', 'D', 'U', '_', 'W', '_', 'Q', 'B', 0,
  /* 4802 */ 'S', 'B', 0,
  /* 4805 */ 'M', 'O', 'D', 'S', 'U', 'B', 0,
  /* 4812 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'S', 'U', 'B', 0,
  /* 4823 */ 'S', 'Y', 'N', 'C', 0,
  /* 4828 */ 'A', 'D', 'D', 'S', 'C', 0,
  /* 4834 */ 'A', 'D', 'D', 'W', 'C', 0,
  /* 4840 */ 'S', 'C', 'D', 0,
  /* 4844 */ 'D', 'A', 'D', 'D', 0,
  /* 4849 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'A', 'D', 'D', 0,
  /* 4860 */ 'D', 'S', 'H', 'D', 0,
  /* 4865 */ 'L', 'L', 'D', 0,
  /* 4869 */ 'A', 'N', 'D', 0,
  /* 4873 */ 'P', 'R', 'E', 'P', 'E', 'N', 'D', 0,
  /* 4881 */ 'A', 'P', 'P', 'E', 'N', 'D', 0,
  /* 4888 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 4901 */ 'S', 'D', 0,
  /* 4904 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 4917 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 4924 */ 'B', 'N', 'E', 0,
  /* 4928 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 4938 */ 'B', 'C', '1', 'F', 0,
  /* 4943 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 4956 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 4971 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 4985 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 4999 */ 'D', 'S', 'B', 'H', 0,
  /* 5004 */ 'W', 'S', 'B', 'H', 0,
  /* 5009 */ 'S', 'E', 'H', 0,
  /* 5013 */ 'L', 'H', 0,
  /* 5016 */ 'S', 'H', 'R', 'A', '_', 'P', 'H', 0,
  /* 5024 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'Q', 'B', '_', 'P', 'H', 0,
  /* 5037 */ 'P', 'R', 'E', 'C', 'R', '_', 'Q', 'B', '_', 'P', 'H', 0,
  /* 5049 */ 'P', 'R', 'E', 'C', 'R', 'Q', 'U', '_', 'S', '_', 'Q', 'B', '_', 'P', 'H', 0,
  /* 5065 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', '_', 'L', 'E', '_', 'P', 'H', 0,
  /* 5081 */ 'S', 'U', 'B', 'Q', 'H', '_', 'P', 'H', 0,
  /* 5090 */ 'A', 'D', 'D', 'Q', 'H', '_', 'P', 'H', 0,
  /* 5099 */ 'P', 's', 'e', 'u', 'd', 'o', 'P', 'I', 'C', 'K', '_', 'P', 'H', 0,
  /* 5113 */ 'S', 'H', 'L', 'L', '_', 'P', 'H', 0,
  /* 5121 */ 'R', 'E', 'P', 'L', '_', 'P', 'H', 0,
  /* 5129 */ 'S', 'H', 'R', 'L', '_', 'P', 'H', 0,
  /* 5137 */ 'P', 'A', 'C', 'K', 'R', 'L', '_', 'P', 'H', 0,
  /* 5147 */ 'M', 'U', 'L', '_', 'P', 'H', 0,
  /* 5154 */ 'S', 'U', 'B', 'Q', '_', 'P', 'H', 0,
  /* 5162 */ 'A', 'D', 'D', 'Q', '_', 'P', 'H', 0,
  /* 5170 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', '_', 'E', 'Q', '_', 'P', 'H', 0,
  /* 5186 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'P', 'H', 0,
  /* 5196 */ 'S', 'U', 'B', 'Q', 'H', '_', 'R', '_', 'P', 'H', 0,
  /* 5207 */ 'A', 'D', 'D', 'Q', 'H', '_', 'R', '_', 'P', 'H', 0,
  /* 5218 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'P', 'H', 0,
  /* 5229 */ 'M', 'U', 'L', 'Q', '_', 'R', 'S', '_', 'P', 'H', 0,
  /* 5240 */ 'S', 'H', 'L', 'L', '_', 'S', '_', 'P', 'H', 0,
  /* 5250 */ 'M', 'U', 'L', '_', 'S', '_', 'P', 'H', 0,
  /* 5259 */ 'S', 'U', 'B', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 5269 */ 'A', 'D', 'D', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 5279 */ 'M', 'U', 'L', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 5289 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 5299 */ 'S', 'U', 'B', 'U', '_', 'S', '_', 'P', 'H', 0,
  /* 5309 */ 'A', 'D', 'D', 'U', '_', 'S', '_', 'P', 'H', 0,
  /* 5319 */ 'S', 'H', 'L', 'L', 'V', '_', 'S', '_', 'P', 'H', 0,
  /* 5330 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', '_', 'L', 'T', '_', 'P', 'H', 0,
  /* 5346 */ 'S', 'U', 'B', 'U', '_', 'P', 'H', 0,
  /* 5354 */ 'A', 'D', 'D', 'U', '_', 'P', 'H', 0,
  /* 5362 */ 'S', 'H', 'R', 'A', 'V', '_', 'P', 'H', 0,
  /* 5371 */ 'S', 'H', 'L', 'L', 'V', '_', 'P', 'H', 0,
  /* 5380 */ 'R', 'E', 'P', 'L', 'V', '_', 'P', 'H', 0,
  /* 5389 */ 'S', 'H', 'R', 'L', 'V', '_', 'P', 'H', 0,
  /* 5398 */ 'D', 'P', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 5407 */ 'M', 'U', 'L', 'S', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 5418 */ 'D', 'P', 'A', 'Q', 'X', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 5432 */ 'D', 'P', 'S', 'Q', 'X', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 5446 */ 'D', 'P', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 5455 */ 'D', 'P', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 5467 */ 'M', 'U', 'L', 'S', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 5481 */ 'D', 'P', 'S', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 5493 */ 'D', 'P', 'A', 'Q', 'X', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 5506 */ 'D', 'P', 'S', 'Q', 'X', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 5519 */ 'D', 'P', 'A', 'X', '_', 'W', '_', 'P', 'H', 0,
  /* 5529 */ 'D', 'P', 'S', 'X', '_', 'W', '_', 'P', 'H', 0,
  /* 5539 */ 'S', 'H', 0,
  /* 5542 */ 'E', 'X', 'T', 'R', '_', 'S', '_', 'H', 0,
  /* 5551 */ 'E', 'X', 'T', 'R', 'V', '_', 'S', '_', 'H', 0,
  /* 5561 */ 'M', 'F', 'H', 'I', 0,
  /* 5566 */ 'P', 'H', 'I', 0,
  /* 5570 */ 'M', 'T', 'H', 'I', 0,
  /* 5575 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'I', 0,
  /* 5586 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'I', 0,
  /* 5597 */ 'M', 'O', 'V', 'F', '_', 'I', 0,
  /* 5604 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'I', 0,
  /* 5613 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'I', 0,
  /* 5622 */ 'M', 'O', 'V', 'T', '_', 'I', 0,
  /* 5629 */ 'J', 0,
  /* 5631 */ 'B', 'R', 'E', 'A', 'K', 0,
  /* 5637 */ 'J', 'A', 'L', 0,
  /* 5641 */ 'B', 'G', 'E', 'Z', 'A', 'L', 0,
  /* 5648 */ 'B', 'L', 'T', 'Z', 'A', 'L', 0,
  /* 5655 */ 'M', 'U', 'L', 'E', 'U', '_', 'S', '_', 'P', 'H', '_', 'Q', 'B', 'L', 0,
  /* 5670 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 0,
  /* 5684 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 0,
  /* 5699 */ 'D', 'P', 'A', 'U', '_', 'H', '_', 'Q', 'B', 'L', 0,
  /* 5710 */ 'D', 'P', 'S', 'U', '_', 'H', '_', 'Q', 'B', 'L', 0,
  /* 5721 */ 'L', 'D', 'L', 0,
  /* 5725 */ 'S', 'D', 'L', 0,
  /* 5729 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5738 */ 'P', 'R', 'O', 'L', 'O', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5751 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5760 */ 'M', 'A', 'Q', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 5773 */ 'P', 'R', 'E', 'C', 'E', 'Q', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 5786 */ 'M', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 5798 */ 'M', 'U', 'L', 'E', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 5812 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', 0,
  /* 5821 */ 'S', 'Y', 'S', 'C', 'A', 'L', 'L', 0,
  /* 5829 */ 'K', 'I', 'L', 'L', 0,
  /* 5834 */ 'D', 'S', 'L', 'L', 0,
  /* 5839 */ 'D', 'S', 'R', 'L', 0,
  /* 5844 */ 'M', 'U', 'L', 0,
  /* 5848 */ 'L', 'W', 'L', 0,
  /* 5852 */ 'S', 'W', 'L', 0,
  /* 5856 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'D', '6', '4', '_', 'L', 0,
  /* 5872 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'S', '_', 'L', 0,
  /* 5886 */ 'S', 'R', 'A', '_', 'M', 'M', 0,
  /* 5893 */ 'L', 'B', '_', 'M', 'M', 0,
  /* 5899 */ 'S', 'B', '_', 'M', 'M', 0,
  /* 5905 */ 'S', 'U', 'B', '_', 'M', 'M', 0,
  /* 5912 */ 'A', 'D', 'D', '_', 'M', 'M', 0,
  /* 5919 */ 'A', 'N', 'D', '_', 'M', 'M', 0,
  /* 5926 */ 'L', 'H', '_', 'M', 'M', 0,
  /* 5932 */ 'S', 'H', '_', 'M', 'M', 0,
  /* 5938 */ 'S', 'L', 'L', '_', 'M', 'M', 0,
  /* 5945 */ 'S', 'R', 'L', '_', 'M', 'M', 0,
  /* 5952 */ 'M', 'U', 'L', '_', 'M', 'M', 0,
  /* 5959 */ 'N', 'O', 'R', '_', 'M', 'M', 0,
  /* 5966 */ 'X', 'O', 'R', '_', 'M', 'M', 0,
  /* 5973 */ 'R', 'O', 'T', 'R', '_', 'M', 'M', 0,
  /* 5981 */ 'S', 'L', 'T', '_', 'M', 'M', 0,
  /* 5988 */ 'M', 'U', 'L', 'T', '_', 'M', 'M', 0,
  /* 5996 */ 'S', 'R', 'A', 'V', '_', 'M', 'M', 0,
  /* 6004 */ 'S', 'L', 'L', 'V', '_', 'M', 'M', 0,
  /* 6012 */ 'S', 'R', 'L', 'V', '_', 'M', 'M', 0,
  /* 6020 */ 'R', 'O', 'T', 'R', 'V', '_', 'M', 'M', 0,
  /* 6029 */ 'L', 'W', '_', 'M', 'M', 0,
  /* 6035 */ 'S', 'W', '_', 'M', 'M', 0,
  /* 6041 */ 'A', 'D', 'D', 'i', '_', 'M', 'M', 0,
  /* 6049 */ 'A', 'N', 'D', 'i', '_', 'M', 'M', 0,
  /* 6057 */ 'X', 'O', 'R', 'i', '_', 'M', 'M', 0,
  /* 6065 */ 'S', 'L', 'T', 'i', '_', 'M', 'M', 0,
  /* 6073 */ 'L', 'U', 'i', '_', 'M', 'M', 0,
  /* 6080 */ 'L', 'B', 'u', '_', 'M', 'M', 0,
  /* 6087 */ 'S', 'U', 'B', 'u', '_', 'M', 'M', 0,
  /* 6095 */ 'A', 'D', 'D', 'u', '_', 'M', 'M', 0,
  /* 6103 */ 'L', 'H', 'u', '_', 'M', 'M', 0,
  /* 6110 */ 'S', 'L', 'T', 'u', '_', 'M', 'M', 0,
  /* 6118 */ 'M', 'U', 'L', 'T', 'u', '_', 'M', 'M', 0,
  /* 6127 */ 'A', 'D', 'D', 'i', 'u', '_', 'M', 'M', 0,
  /* 6136 */ 'S', 'L', 'T', 'i', 'u', '_', 'M', 'M', 0,
  /* 6145 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 6155 */ 'D', 'I', 'N', 'S', 'M', 0,
  /* 6161 */ 'D', 'E', 'X', 'T', 'M', 0,
  /* 6167 */ 'B', 'A', 'L', 'I', 'G', 'N', 0,
  /* 6174 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 6191 */ 'B', 'P', 'O', 'S', 'G', 'E', '3', '2', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 6207 */ 'D', 'C', 'L', 'O', 0,
  /* 6212 */ 'M', 'F', 'L', 'O', 0,
  /* 6217 */ 'S', 'H', 'I', 'L', 'O', 0,
  /* 6223 */ 'M', 'T', 'L', 'O', 0,
  /* 6228 */ 'T', 'R', 'A', 'P', 0,
  /* 6233 */ 'E', 'X', 'T', 'P', 'D', 'P', 0,
  /* 6240 */ 'M', 'T', 'H', 'L', 'I', 'P', 0,
  /* 6247 */ 'M', 'F', 'C', '0', '_', '3', 'O', 'P', 0,
  /* 6256 */ 'M', 'T', 'C', '0', '_', '3', 'O', 'P', 0,
  /* 6265 */ 'M', 'F', 'C', '2', '_', '3', 'O', 'P', 0,
  /* 6274 */ 'M', 'T', 'C', '2', '_', '3', 'O', 'P', 0,
  /* 6283 */ 'N', 'O', 'P', 0,
  /* 6287 */ 'R', 'D', 'D', 'S', 'P', 0,
  /* 6293 */ 'W', 'R', 'D', 'S', 'P', 0,
  /* 6299 */ 'M', 'S', 'U', 'B', '_', 'D', 'S', 'P', 0,
  /* 6308 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', '_', 'D', 'S', 'P', 0,
  /* 6320 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', '_', 'D', 'S', 'P', 0,
  /* 6333 */ 'M', 'A', 'D', 'D', '_', 'D', 'S', 'P', 0,
  /* 6342 */ 'L', 'O', 'A', 'D', '_', 'C', 'C', 'O', 'N', 'D', '_', 'D', 'S', 'P', 0,
  /* 6357 */ 'S', 'T', 'O', 'R', 'E', '_', 'C', 'C', 'O', 'N', 'D', '_', 'D', 'S', 'P', 0,
  /* 6373 */ 'M', 'F', 'H', 'I', '_', 'D', 'S', 'P', 0,
  /* 6382 */ 'M', 'T', 'H', 'I', '_', 'D', 'S', 'P', 0,
  /* 6391 */ 'M', 'F', 'L', 'O', '_', 'D', 'S', 'P', 0,
  /* 6400 */ 'M', 'T', 'L', 'O', '_', 'D', 'S', 'P', 0,
  /* 6409 */ 'M', 'U', 'L', 'T', '_', 'D', 'S', 'P', 0,
  /* 6418 */ 'M', 'S', 'U', 'B', 'U', '_', 'D', 'S', 'P', 0,
  /* 6428 */ 'M', 'A', 'D', 'D', 'U', '_', 'D', 'S', 'P', 0,
  /* 6438 */ 'M', 'U', 'L', 'T', 'U', '_', 'D', 'S', 'P', 0,
  /* 6448 */ 'E', 'X', 'T', 'P', 0,
  /* 6453 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 6468 */ 'B', 'E', 'Q', 0,
  /* 6472 */ 'T', 'E', 'Q', 0,
  /* 6476 */ 'M', 'U', 'L', 'E', 'U', '_', 'S', '_', 'P', 'H', '_', 'Q', 'B', 'R', 0,
  /* 6491 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 0,
  /* 6505 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 0,
  /* 6520 */ 'D', 'P', 'A', 'U', '_', 'H', '_', 'Q', 'B', 'R', 0,
  /* 6531 */ 'D', 'P', 'S', 'U', '_', 'H', '_', 'Q', 'B', 'R', 0,
  /* 6542 */ 'B', 'A', 'L', '_', 'B', 'R', 0,
  /* 6549 */ 'L', 'D', 'R', 0,
  /* 6553 */ 'S', 'D', 'R', 0,
  /* 6557 */ 'M', 'A', 'Q', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 6570 */ 'P', 'R', 'E', 'C', 'E', 'Q', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 6583 */ 'M', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 6595 */ 'M', 'U', 'L', 'E', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 6609 */ 'J', 'R', 0,
  /* 6612 */ 'J', 'A', 'L', 'R', 0,
  /* 6617 */ 'N', 'O', 'R', 0,
  /* 6621 */ 'X', 'O', 'R', 0,
  /* 6625 */ 'D', 'R', 'O', 'T', 'R', 0,
  /* 6631 */ 'R', 'D', 'H', 'W', 'R', 0,
  /* 6637 */ 'L', 'W', 'R', 0,
  /* 6641 */ 'S', 'W', 'R', 0,
  /* 6645 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', '6', '4', '_', 'R', 0,
  /* 6658 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', '_', 'R', 0,
  /* 6669 */ 'D', 'I', 'N', 'S', 0,
  /* 6674 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 6691 */ 'C', 'V', 'T', '_', 'D', '3', '2', '_', 'S', 0,
  /* 6701 */ 'C', 'V', 'T', '_', 'D', '6', '4', '_', 'S', 0,
  /* 6711 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'S', 0,
  /* 6722 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'S', 0,
  /* 6733 */ 'F', 'S', 'U', 'B', '_', 'S', 0,
  /* 6740 */ 'N', 'M', 'S', 'U', 'B', '_', 'S', 0,
  /* 6748 */ 'F', 'A', 'D', 'D', '_', 'S', 0,
  /* 6755 */ 'N', 'M', 'A', 'D', 'D', '_', 'S', 0,
  /* 6763 */ 'C', '_', 'N', 'G', 'E', '_', 'S', 0,
  /* 6771 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'S', 0,
  /* 6780 */ 'C', '_', 'O', 'L', 'E', '_', 'S', 0,
  /* 6788 */ 'C', '_', 'U', 'L', 'E', '_', 'S', 0,
  /* 6796 */ 'C', '_', 'L', 'E', '_', 'S', 0,
  /* 6803 */ 'C', '_', 'S', 'F', '_', 'S', 0,
  /* 6810 */ 'M', 'O', 'V', 'F', '_', 'S', 0,
  /* 6817 */ 'C', '_', 'F', '_', 'S', 0,
  /* 6823 */ 'F', 'N', 'E', 'G', '_', 'S', 0,
  /* 6830 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'S', 0,
  /* 6839 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'S', 0,
  /* 6848 */ 'C', '_', 'N', 'G', 'L', '_', 'S', 0,
  /* 6856 */ 'F', 'M', 'U', 'L', '_', 'S', 0,
  /* 6863 */ 'T', 'R', 'U', 'N', 'C', '_', 'L', '_', 'S', 0,
  /* 6873 */ 'R', 'O', 'U', 'N', 'D', '_', 'L', '_', 'S', 0,
  /* 6883 */ 'C', 'E', 'I', 'L', '_', 'L', '_', 'S', 0,
  /* 6892 */ 'F', 'L', 'O', 'O', 'R', '_', 'L', '_', 'S', 0,
  /* 6902 */ 'C', 'V', 'T', '_', 'L', '_', 'S', 0,
  /* 6910 */ 'C', '_', 'U', 'N', '_', 'S', 0,
  /* 6917 */ 'C', '_', 'S', 'E', 'Q', '_', 'S', 0,
  /* 6925 */ 'C', '_', 'U', 'E', 'Q', '_', 'S', 0,
  /* 6933 */ 'C', '_', 'E', 'Q', '_', 'S', 0,
  /* 6940 */ 'F', 'A', 'B', 'S', '_', 'S', 0,
  /* 6947 */ 'C', '_', 'N', 'G', 'T', '_', 'S', 0,
  /* 6955 */ 'C', '_', 'O', 'L', 'T', '_', 'S', 0,
  /* 6963 */ 'C', '_', 'U', 'L', 'T', '_', 'S', 0,
  /* 6971 */ 'C', '_', 'L', 'T', '_', 'S', 0,
  /* 6978 */ 'F', 'S', 'Q', 'R', 'T', '_', 'S', 0,
  /* 6986 */ 'M', 'O', 'V', 'T', '_', 'S', 0,
  /* 6993 */ 'F', 'D', 'I', 'V', '_', 'S', 0,
  /* 7000 */ 'F', 'M', 'O', 'V', '_', 'S', 0,
  /* 7007 */ 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'S', 0,
  /* 7017 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'S', 0,
  /* 7027 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'S', 0,
  /* 7036 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'S', 0,
  /* 7046 */ 'C', 'V', 'T', '_', 'W', '_', 'S', 0,
  /* 7054 */ 'B', 'C', '1', 'T', 0,
  /* 7059 */ 'D', 'E', 'R', 'E', 'T', 0,
  /* 7065 */ 'S', 'L', 'T', 0,
  /* 7069 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'M', 'U', 'L', 'T', 0,
  /* 7081 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'U', 'L', 'T', 0,
  /* 7092 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 7107 */ 'D', 'E', 'X', 'T', 0,
  /* 7112 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'S', 'U', 'B', 'U', 0,
  /* 7124 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'A', 'D', 'D', 'U', 0,
  /* 7136 */ 'D', 'I', 'N', 'S', 'U', 0,
  /* 7142 */ 'D', 'E', 'X', 'T', 'U', 0,
  /* 7148 */ 'D', 'S', 'R', 'A', 'V', 0,
  /* 7154 */ 'B', 'I', 'T', 'R', 'E', 'V', 0,
  /* 7161 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'S', 'D', 'I', 'V', 0,
  /* 7173 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'D', 'I', 'V', 0,
  /* 7184 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'U', 'D', 'I', 'V', 0,
  /* 7196 */ 'P', 's', 'e', 'u', 'd', 'o', 'U', 'D', 'I', 'V', 0,
  /* 7207 */ 'D', 'S', 'L', 'L', 'V', 0,
  /* 7213 */ 'D', 'S', 'R', 'L', 'V', 0,
  /* 7219 */ 'S', 'H', 'I', 'L', 'O', 'V', 0,
  /* 7226 */ 'E', 'X', 'T', 'P', 'D', 'P', 'V', 0,
  /* 7234 */ 'E', 'X', 'T', 'P', 'V', 0,
  /* 7240 */ 'D', 'R', 'O', 'T', 'R', 'V', 0,
  /* 7247 */ 'I', 'N', 'S', 'V', 0,
  /* 7252 */ 'L', 'W', 0,
  /* 7255 */ 'S', 'W', 0,
  /* 7258 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'D', '3', '2', '_', 'W', 0,
  /* 7274 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'D', '6', '4', '_', 'W', 0,
  /* 7290 */ 'P', 'R', 'E', 'C', 'R', '_', 'S', 'R', 'A', '_', 'P', 'H', '_', 'W', 0,
  /* 7305 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'P', 'H', '_', 'W', 0,
  /* 7317 */ 'P', 'R', 'E', 'C', 'R', '_', 'S', 'R', 'A', '_', 'R', '_', 'P', 'H', '_', 'W', 0,
  /* 7334 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'R', 'S', '_', 'P', 'H', '_', 'W', 0,
  /* 7349 */ 'S', 'U', 'B', 'Q', 'H', '_', 'W', 0,
  /* 7357 */ 'A', 'D', 'D', 'Q', 'H', '_', 'W', 0,
  /* 7365 */ 'D', 'P', 'A', 'Q', '_', 'S', 'A', '_', 'L', '_', 'W', 0,
  /* 7377 */ 'D', 'P', 'S', 'Q', '_', 'S', 'A', '_', 'L', '_', 'W', 0,
  /* 7389 */ 'E', 'X', 'T', 'R', '_', 'W', 0,
  /* 7396 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'W', 0,
  /* 7405 */ 'S', 'U', 'B', 'Q', 'H', '_', 'R', '_', 'W', 0,
  /* 7415 */ 'A', 'D', 'D', 'Q', 'H', '_', 'R', '_', 'W', 0,
  /* 7425 */ 'E', 'X', 'T', 'R', '_', 'R', '_', 'W', 0,
  /* 7434 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'W', 0,
  /* 7444 */ 'E', 'X', 'T', 'R', 'V', '_', 'R', '_', 'W', 0,
  /* 7454 */ 'M', 'U', 'L', 'Q', '_', 'R', 'S', '_', 'W', 0,
  /* 7464 */ 'E', 'X', 'T', 'R', '_', 'R', 'S', '_', 'W', 0,
  /* 7474 */ 'E', 'X', 'T', 'R', 'V', '_', 'R', 'S', '_', 'W', 0,
  /* 7485 */ 'S', 'H', 'L', 'L', '_', 'S', '_', 'W', 0,
  /* 7494 */ 'S', 'U', 'B', 'Q', '_', 'S', '_', 'W', 0,
  /* 7503 */ 'A', 'D', 'D', 'Q', '_', 'S', '_', 'W', 0,
  /* 7512 */ 'M', 'U', 'L', 'Q', '_', 'S', '_', 'W', 0,
  /* 7521 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'W', 0,
  /* 7530 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'S', '_', 'W', 0,
  /* 7544 */ 'S', 'H', 'L', 'L', 'V', '_', 'S', '_', 'W', 0,
  /* 7554 */ 'E', 'X', 'T', 'R', 'V', '_', 'W', 0,
  /* 7562 */ 'L', 'H', 'X', 0,
  /* 7566 */ 'L', 'B', 'U', 'X', 0,
  /* 7571 */ 'L', 'W', 'X', 0,
  /* 7575 */ 'C', 'O', 'P', 'Y', 0,
  /* 7580 */ 'B', 'G', 'E', 'Z', 0,
  /* 7585 */ 'B', 'L', 'E', 'Z', 0,
  /* 7590 */ 'D', 'C', 'L', 'Z', 0,
  /* 7595 */ 'B', 'G', 'T', 'Z', 0,
  /* 7600 */ 'B', 'L', 'T', 'Z', 0,
  /* 7605 */ 'S', 'e', 'l', 'B', 'n', 'e', 'Z', 0,
  /* 7613 */ 'S', 'e', 'l', 'B', 'e', 'q', 'Z', 0,
  /* 7621 */ 'L', 'o', 'a', 'd', 'I', 'm', 'm', '3', '2', 'R', 'e', 'g', 0,
  /* 7634 */ 'L', 'o', 'a', 'd', 'A', 'd', 'd', 'r', '3', '2', 'R', 'e', 'g', 0,
  /* 7648 */ 'D', 'A', 'D', 'D', 'i', 0,
  /* 7654 */ 'A', 'N', 'D', 'i', 0,
  /* 7659 */ 'X', 'O', 'R', 'i', 0,
  /* 7664 */ 'S', 'L', 'T', 'i', 0,
  /* 7669 */ 'L', 'U', 'i', 0,
  /* 7673 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'C', 'm', 'p', 'i', 0,
  /* 7687 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'C', 'm', 'p', 'i', 0,
  /* 7701 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 'i', 0,
  /* 7715 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 'i', 0,
  /* 7729 */ 'L', 'o', 'a', 'd', 'A', 'd', 'd', 'r', '3', '2', 'I', 'm', 'm', 0,
  /* 7743 */ 'J', 'A', 'L', 'R', '6', '4', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 7756 */ 'J', 'A', 'L', 'R', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 7767 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'C', 'm', 'p', 0,
  /* 7780 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'C', 'm', 'p', 0,
  /* 7793 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 0,
  /* 7806 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 0,
  /* 7819 */ 'L', 'B', 'u', 0,
  /* 7823 */ 'D', 'S', 'U', 'B', 'u', 0,
  /* 7829 */ 'D', 'A', 'D', 'D', 'u', 0,
  /* 7835 */ 'L', 'H', 'u', 0,
  /* 7839 */ 'S', 'L', 'T', 'u', 0,
  /* 7844 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'M', 'U', 'L', 'T', 'u', 0,
  /* 7857 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'U', 'L', 'T', 'u', 0,
  /* 7869 */ 'L', 'W', 'u', 0,
  /* 7873 */ 'D', 'A', 'D', 'D', 'i', 'u', 0,
  /* 7880 */ 'L', 'E', 'A', '_', 'A', 'D', 'D', 'i', 'u', 0,
  /* 7890 */ 'S', 'L', 'T', 'i', 'u', 0,
  /* 7896 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 'i', 'u', 0,
  /* 7911 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 'i', 'u', 0,
  /* 7926 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 'u', 0,
  /* 7940 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 'u', 0,
};

extern const unsigned MipsInstrNameIndices[] = {
    5566U, 6145U, 5738U, 5751U, 5729U, 5829U, 4956U, 4971U, 
    4943U, 4985U, 6674U, 4928U, 4904U, 7575U, 4917U, 7092U, 
    4888U, 5289U, 4667U, 7521U, 4845U, 5090U, 5207U, 7415U, 
    7357U, 5162U, 5269U, 7503U, 4828U, 4535U, 4645U, 5354U, 
    4747U, 5309U, 4687U, 4834U, 5912U, 7649U, 6041U, 7874U, 
    6127U, 7830U, 6095U, 6174U, 6453U, 4869U, 770U, 5919U, 
    7654U, 1688U, 6049U, 4881U, 1937U, 3840U, 566U, 3309U, 
    1443U, 3590U, 3107U, 4044U, 1860U, 3751U, 489U, 3220U, 
    1335U, 3501U, 3034U, 3959U, 1901U, 3798U, 530U, 3267U, 
    1376U, 3548U, 3073U, 4004U, 1880U, 3774U, 509U, 3243U, 
    1355U, 3524U, 3053U, 3981U, 1977U, 3886U, 606U, 3355U, 
    1483U, 3636U, 3145U, 4088U, 1840U, 3728U, 469U, 3197U, 
    1315U, 3478U, 3015U, 3937U, 1957U, 3863U, 586U, 3332U, 
    1463U, 3613U, 3126U, 4066U, 1921U, 3821U, 550U, 3290U, 
    1427U, 3571U, 3092U, 4026U, 2360U, 2236U, 2684U, 2388U, 
    2185U, 2624U, 2252U, 2952U, 2891U, 4471U, 6167U, 6542U, 
    4938U, 7054U, 6468U, 1585U, 7580U, 1651U, 5641U, 7595U, 
    1665U, 7154U, 7585U, 1658U, 7600U, 1672U, 5648U, 4924U, 
    1222U, 460U, 6191U, 5631U, 2711U, 2417U, 2430U, 2699U, 
    2404U, 2610U, 2452U, 2028U, 2480U, 2058U, 2510U, 2541U, 
    2565U, 2438U, 2013U, 2466U, 2043U, 2494U, 2526U, 2556U, 
    1228U, 990U, 6883U, 427U, 1189U, 7027U, 22U, 6208U, 
    7591U, 4582U, 4484U, 4697U, 4595U, 4497U, 4710U, 4613U, 
    4515U, 4728U, 5176U, 5071U, 5336U, 33U, 6691U, 7264U, 
    5862U, 6701U, 7280U, 1013U, 6902U, 317U, 1079U, 5878U, 
    7536U, 450U, 1212U, 7046U, 299U, 1061U, 6933U, 203U, 
    908U, 6817U, 176U, 881U, 6796U, 357U, 1119U, 6971U, 
    135U, 840U, 6763U, 145U, 850U, 6771U, 242U, 947U, 
    6848U, 327U, 1089U, 6947U, 156U, 861U, 6780U, 337U, 
    1099U, 6955U, 279U, 1041U, 6917U, 185U, 890U, 6803U, 
    289U, 1051U, 6925U, 166U, 871U, 6788U, 347U, 1109U, 
    6963U, 261U, 1023U, 6910U, 2773U, 2647U, 2334U, 676U, 
    4844U, 7648U, 7873U, 7829U, 6207U, 7590U, 7059U, 7107U, 
    6161U, 7142U, 6669U, 6155U, 7136U, 1537U, 27U, 1561U, 
    1549U, 38U, 1573U, 7075U, 7850U, 5418U, 5493U, 7365U, 
    5455U, 5699U, 6520U, 5519U, 5398U, 5432U, 5506U, 7377U, 
    5481U, 5710U, 6531U, 5529U, 5446U, 6625U, 7240U, 4999U, 
    7167U, 4860U, 5834U, 625U, 648U, 7207U, 4458U, 90U, 
    7148U, 5839U, 632U, 7213U, 7823U, 7190U, 2859U, 2837U, 
    7060U, 7108U, 6448U, 6233U, 7226U, 7234U, 7474U, 7444U, 
    5551U, 7554U, 7464U, 7425U, 5542U, 7389U, 1241U, 308U, 
    1070U, 6940U, 116U, 821U, 6748U, 270U, 1032U, 639U, 
    385U, 1147U, 6993U, 1001U, 6892U, 438U, 1200U, 7036U, 
    394U, 1156U, 7000U, 252U, 957U, 6856U, 211U, 916U, 
    6823U, 366U, 1128U, 6978U, 97U, 802U, 6733U, 6670U, 
    7247U, 5629U, 5637U, 6612U, 1596U, 7743U, 7756U, 6609U, 
    1591U, 2618U, 2582U, 2574U, 2730U, 2589U, 4473U, 739U, 
    3419U, 7566U, 5893U, 4193U, 4109U, 7819U, 1731U, 3710U, 
    6080U, 4247U, 4375U, 4866U, 6U, 687U, 3377U, 5721U, 
    4159U, 6549U, 4335U, 54U, 701U, 3397U, 4135U, 7880U, 
    1750U, 5013U, 1265U, 3462U, 7562U, 5926U, 4211U, 4147U, 
    7835U, 1737U, 3719U, 6103U, 4257U, 4382U, 5818U, 4865U, 
    4134U, 4173U, 2992U, 3908U, 749U, 3435U, 6308U, 4267U, 
    6342U, 4298U, 66U, 717U, 7669U, 1709U, 6073U, 7252U, 
    1641U, 3694U, 44U, 3163U, 5848U, 1511U, 3658U, 4179U, 
    6637U, 1623U, 3676U, 4349U, 7571U, 78U, 3179U, 6029U, 
    4229U, 4363U, 7869U, 4389U, 2087U, 2151U, 2119U, 2168U, 
    2637U, 2323U, 7729U, 7634U, 7621U, 674U, 2204U, 2266U, 
    4855U, 7130U, 6428U, 126U, 831U, 6333U, 6756U, 5760U, 
    6557U, 5786U, 6583U, 6247U, 28U, 6265U, 5561U, 1275U, 
    6373U, 6212U, 1523U, 6391U, 658U, 1715U, 4805U, 194U, 
    899U, 5597U, 1396U, 6810U, 776U, 5575U, 1289U, 6711U, 
    220U, 925U, 5604U, 1405U, 6830U, 376U, 1138U, 5622U, 
    1502U, 6986U, 789U, 5586U, 1302U, 6722U, 231U, 936U, 
    5613U, 1416U, 6839U, 4818U, 7118U, 6418U, 107U, 812U, 
    6299U, 6741U, 6256U, 39U, 6274U, 5570U, 1282U, 6382U, 
    6240U, 6223U, 1530U, 6400U, 5844U, 5798U, 6595U, 5655U, 
    6476U, 5229U, 7454U, 5279U, 7512U, 5467U, 5407U, 7076U, 
    6438U, 6409U, 5988U, 7851U, 6118U, 5952U, 5147U, 5250U, 
    2603U, 2723U, 1996U, 1770U, 2793U, 2926U, 2825U, 2978U, 
    125U, 830U, 6755U, 106U, 811U, 6740U, 6283U, 6617U, 
    1603U, 5959U, 2763U, 2804U, 6618U, 1604U, 5960U, 7660U, 
    1696U, 6058U, 2903U, 5137U, 5105U, 4550U, 5684U, 4411U, 
    6505U, 4442U, 5773U, 6570U, 5670U, 4396U, 6491U, 4427U, 
    5049U, 7305U, 5024U, 7334U, 5037U, 7290U, 7317U, 4873U, 
    4607U, 4509U, 4722U, 5170U, 5065U, 5330U, 7258U, 5856U, 
    7274U, 5872U, 7530U, 7069U, 7844U, 7161U, 7184U, 0U, 
    4849U, 7124U, 4812U, 7112U, 7081U, 7857U, 5099U, 4544U, 
    11U, 7173U, 7196U, 4791U, 6287U, 6631U, 1615U, 5380U, 
    4773U, 5121U, 4566U, 7061U, 6626U, 7241U, 6020U, 5973U, 
    978U, 6873U, 415U, 1177U, 7017U, 1824U, 1788U, 4463U, 
    1780U, 4802U, 744U, 3427U, 5899U, 4202U, 4115U, 4831U, 
    4840U, 4127U, 4121U, 4901U, 17U, 694U, 3387U, 7168U, 
    5725U, 4166U, 6553U, 4342U, 60U, 709U, 3408U, 4141U, 
    4469U, 733U, 5009U, 1259U, 5539U, 1270U, 3470U, 6217U, 
    7219U, 5371U, 4764U, 5319U, 7544U, 5113U, 4558U, 5240U, 
    7485U, 5362U, 4755U, 5218U, 4656U, 7434U, 5016U, 4476U, 
    5186U, 4624U, 7396U, 5389U, 4782U, 5129U, 4574U, 5932U, 
    4220U, 4153U, 5835U, 649U, 1679U, 7208U, 6004U, 5938U, 
    7065U, 1635U, 5981U, 7664U, 1702U, 6065U, 7890U, 1762U, 
    6136U, 7839U, 1743U, 6110U, 4459U, 7149U, 5996U, 5886U, 
    5840U, 7214U, 6012U, 5945U, 3003U, 3922U, 759U, 3448U, 
    6320U, 4282U, 6357U, 4316U, 4808U, 5081U, 5196U, 7405U, 
    7349U, 5154U, 5259U, 7494U, 4526U, 4634U, 5346U, 4739U, 
    5299U, 4677U, 5905U, 7824U, 6087U, 72U, 725U, 7255U, 
    1646U, 3702U, 49U, 3171U, 5852U, 1517U, 3667U, 4186U, 
    6641U, 1629U, 3685U, 4356U, 84U, 3188U, 6035U, 4238U, 
    4369U, 4823U, 5821U, 1811U, 1801U, 2103U, 7613U, 7605U, 
    7780U, 7687U, 7806U, 7715U, 7911U, 7940U, 7767U, 7673U, 
    7793U, 7701U, 7896U, 7926U, 2135U, 2073U, 2869U, 2738U, 
    2783U, 2292U, 2659U, 2347U, 2307U, 2671U, 2374U, 2750U, 
    2814U, 2965U, 2006U, 2848U, 2080U, 2880U, 2939U, 2220U, 
    2279U, 5812U, 6645U, 6658U, 6472U, 6228U, 966U, 6863U, 
    403U, 1165U, 7007U, 7191U, 6293U, 5004U, 6621U, 1609U, 
    5966U, 7659U, 1695U, 6057U, 2914U, 
};

static inline void InitMipsMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(MipsInsts, MipsInstrNameIndices, MipsInstrNameData, 837);
}

} // End llvm namespace 
#endif // GET_INSTRINFO_MC_DESC


#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct MipsGenInstrInfo : public TargetInstrInfo {
  explicit MipsGenInstrInfo(int SO = -1, int DO = -1);
};
} // End llvm namespace 
#endif // GET_INSTRINFO_HEADER


#ifdef GET_INSTRINFO_CTOR
#undef GET_INSTRINFO_CTOR
namespace llvm {
extern const MCInstrDesc MipsInsts[];
extern const unsigned MipsInstrNameIndices[];
extern const char MipsInstrNameData[];
MipsGenInstrInfo::MipsGenInstrInfo(int SO, int DO)
  : TargetInstrInfo(SO, DO) {
  InitMCInstrInfo(MipsInsts, MipsInstrNameIndices, MipsInstrNameData, 837);
}
} // End llvm namespace 
#endif // GET_INSTRINFO_CTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {namespace Mips {
namespace OpName { 
enum {
OPERAND_LAST
};
} // End namespace OpName
} // End namespace Mips
} // End namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM
#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {namespace Mips {
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // End namespace Mips
} // End namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS
#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace Mips {

enum Arch {
	Arch_se,
	Arch_micromips
};

// Std2MicroMips
int Std2MicroMips(uint16_t Opcode, enum Arch inArch) {
static const uint16_t Std2MicroMipsTable[][3] = {
  { Mips::ADD, Mips::ADD, Mips::ADD_MM },
  { Mips::ADDi, Mips::ADDi, Mips::ADDi_MM },
  { Mips::ADDiu, Mips::ADDiu, Mips::ADDiu_MM },
  { Mips::ADDu, Mips::ADDu, Mips::ADDu_MM },
  { Mips::AND, Mips::AND, Mips::AND_MM },
  { Mips::ANDi, Mips::ANDi, Mips::ANDi_MM },
  { Mips::LB, Mips::LB, Mips::LB_MM },
  { Mips::LB_P8, Mips::LB_P8, Mips::LB_MM_P8 },
  { Mips::LBu, Mips::LBu, Mips::LBu_MM },
  { Mips::LBu_P8, Mips::LBu_P8, Mips::LBu_MM_P8 },
  { Mips::LH, Mips::LH, Mips::LH_MM },
  { Mips::LH_P8, Mips::LH_P8, Mips::LH_MM_P8 },
  { Mips::LHu, Mips::LHu, Mips::LHu_MM },
  { Mips::LHu_P8, Mips::LHu_P8, Mips::LHu_MM_P8 },
  { Mips::LW, Mips::LW, Mips::LW_MM },
  { Mips::LW_P8, Mips::LW_P8, Mips::LW_MM_P8 },
  { Mips::MUL, Mips::MUL, Mips::MUL_MM },
  { Mips::MULT, Mips::MULT, Mips::MULT_MM },
  { Mips::MULTu, Mips::MULTu, Mips::MULTu_MM },
  { Mips::NOR, Mips::NOR, Mips::NOR_MM },
  { Mips::OR, Mips::OR, Mips::OR_MM },
  { Mips::ORi, Mips::ORi, Mips::ORi_MM },
  { Mips::ROTR, Mips::ROTR, Mips::ROTR_MM },
  { Mips::ROTRV, Mips::ROTRV, Mips::ROTRV_MM },
  { Mips::SB, Mips::SB, Mips::SB_MM },
  { Mips::SB_P8, Mips::SB_P8, Mips::SB_MM_P8 },
  { Mips::SH, Mips::SH, Mips::SH_MM },
  { Mips::SH_P8, Mips::SH_P8, Mips::SH_MM_P8 },
  { Mips::SLL, Mips::SLL, Mips::SLL_MM },
  { Mips::SLLV, Mips::SLLV, Mips::SLLV_MM },
  { Mips::SLT, Mips::SLT, Mips::SLT_MM },
  { Mips::SLTi, Mips::SLTi, Mips::SLTi_MM },
  { Mips::SLTiu, Mips::SLTiu, Mips::SLTiu_MM },
  { Mips::SLTu, Mips::SLTu, Mips::SLTu_MM },
  { Mips::SRA, Mips::SRA, Mips::SRA_MM },
  { Mips::SRAV, Mips::SRAV, Mips::SRAV_MM },
  { Mips::SRL, Mips::SRL, Mips::SRL_MM },
  { Mips::SRLV, Mips::SRLV, Mips::SRLV_MM },
  { Mips::SUB, Mips::SUB, Mips::SUB_MM },
  { Mips::SUBu, Mips::SUBu, Mips::SUBu_MM },
  { Mips::SW, Mips::SW, Mips::SW_MM },
  { Mips::SW_P8, Mips::SW_P8, Mips::SW_MM_P8 },
  { Mips::XOR, Mips::XOR, Mips::XOR_MM },
  { Mips::XORi, Mips::XORi, Mips::XORi_MM },
}; // End of Std2MicroMipsTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 44;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == Std2MicroMipsTable[mid][0]) {
      break;
    }
    if (Opcode < Std2MicroMipsTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inArch == Arch_se)
    return Std2MicroMipsTable[mid][1];
  if (inArch == Arch_micromips)
    return Std2MicroMipsTable[mid][2];
  return -1;}

} // End Mips namespace
} // End llvm namespace
#endif // GET_INSTRMAP_INFO

